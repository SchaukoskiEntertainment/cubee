var is=Object.defineProperty;var $e=h=>{throw TypeError(h)};var rs=(h,t,e)=>t in h?is(h,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[t]=e;var U=(h,t,e)=>rs(h,typeof t!="symbol"?t+"":t,e),je=(h,t,e)=>t.has(h)||$e("Cannot "+e);var s=(h,t,e)=>(je(h,t,"read from private field"),e?e.call(h):t.get(h)),p=(h,t,e)=>t.has(h)?$e("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(h):t.set(h,e),c=(h,t,e,o)=>(je(h,t,"write to private field"),o?o.call(h,e):t.set(h,e),e),ct=(h,t,e)=>(je(h,t,"access private method"),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))o(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function e(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(a){if(a.ep)return;a.ep=!0;const i=e(a);fetch(a.href,i)}})();const L=document.getElementById("gameCanvas");function as(h,t,e=8){const o=t.length*2,a=new Uint8Array(o*e*4);t.forEach((d,m)=>{const w=d.from,T=d.to;for(let f=0;f<e;f++){const g=(m*2*e+f)*4,v=((m*2+1)*e+f)*4,S=w[f]||[0,0,0,0],Y=T[f]||[0,0,0,0];a.set([Math.floor(S[0]*255),Math.floor(S[1]*255),Math.floor(S[2]*255),Math.floor(S[3]*255)],g),a.set([Math.floor(Y[0]*255),Math.floor(Y[1]*255),Math.floor(Y[2]*255),Math.floor(Y[3]*255)],v)}});const i=h.createTexture();h.bindTexture(h.TEXTURE_2D,i),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,e,o,0,h.RGBA,h.UNSIGNED_BYTE,a),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE);const n=document.createElement("canvas");n.width=e,n.height=o;const l=n.getContext("2d"),u=l.createImageData(e,o);return u.data.set(a),l.putImageData(u,0,0),i}function Qe(h,t=1){h=h.replace(/^#/,"");let e=parseInt(h,16),o,a,i;if(h.length===6)o=e>>16&255,a=e>>8&255,i=e&255;else if(h.length===3)o=e>>8&15,o=o<<4|o,a=e>>4&15,a=a<<4|a,i=e&15,i=i<<4|i;else throw new Error("Invalid hex color: "+h);return[o/255,a/255,i/255,t]}class Ue{constructor(t,e,o){this.gl=t,this.program=this.createProgram(e,o),this.attributes={},this.uniforms={},window.addEventListener("resize",()=>this.resize()),this.resize()}createViewMatrix(t=0,e=0){return new Float32Array([1,0,0,0,1,0,t,e,1])}resize(){const t=this.gl;this.use(),t.uniform2f(this.getUniform("uResolution"),window.innerWidth,window.innerHeight)}createShader(t,e){const o=this.gl.createShader(t);return this.gl.shaderSource(o,e),this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS)||console.error(this.gl.getShaderInfoLog(o)),o}createProgram(t,e){const o=this.createShader(this.gl.VERTEX_SHADER,t),a=this.createShader(this.gl.FRAGMENT_SHADER,e),i=this.gl.createProgram();return this.gl.attachShader(i,o),this.gl.attachShader(i,a),this.gl.linkProgram(i),this.gl.getProgramParameter(i,this.gl.LINK_STATUS)||console.error(this.gl.getProgramInfoLog(i)),i}use(){this.gl.useProgram(this.program)}getAttrib(t){return this.attributes[t]||(this.attributes[t]=this.gl.getAttribLocation(this.program,t)),this.attributes[t]}getUniform(t){return this.uniforms[t]||(this.uniforms[t]=this.gl.getUniformLocation(this.program,t),this.uniforms[t]),this.uniforms[t]}}var xe,ge;class ns extends Ue{constructor(e,o,a){super(e,`
      attribute vec2 aPosition;   // position in pixels
      attribute vec2 aTexCoord;
      attribute vec2 aBaseXY;
      varying vec2 vTexCoord;
      varying vec2 vBaseXY;
      uniform vec2 uResolution;   // canvas or virtual resolution
      uniform mat3 uModel;        // 2D model transform
      uniform mat3 uView;

      void main() {
        // Apply model transform
        vec3 pos = uView * uModel * vec3(aPosition, 1.0);

        // Convert to clip space (-1 to 1)
        vec2 clipPos = pos.xy / uResolution * 2.0 - 1.0;
        clipPos.y = -clipPos.y; // flip Y to match WebGL coords

        float zNear = -1.0;
        float zFar = 1.0;
        float zNormalized = zFar - (pos.z / 10.0) * (zFar - zNear);
        gl_Position = vec4(clipPos, zNormalized, 1.0);

        vTexCoord = aTexCoord;
        vBaseXY = aBaseXY;
      } 
    `,`
      precision mediump float;

      varying vec2 vTexCoord;
      varying vec2 vBaseXY;

      uniform sampler2D uTexture;
      uniform sampler2D uPaletteTex;
      uniform float uMaxColors;
      uniform float uPaletteHeight;
      uniform int uPaletteIndex;
      uniform int uColorCount;
      uniform float tileSize;      // size of a single tile in pixels
      uniform int moreDark;

      uniform int regionWidth;     // in tiles
      uniform int regionHeight;    // in tiles

      // fetch palette color
      vec4 getPaletteColor(int row, int index) {
          float x = float(index) / uMaxColors + 0.5 / uMaxColors;
          float y = float(row) / uPaletteHeight + 0.5 / uPaletteHeight;
          return texture2D(uPaletteTex, vec2(x, y));
      }

      void main() {
          float tileSizeNormalized = tileSize / 256.0;

          // compute UVs for multi-tile region
          vec2 regionSize = vec2(float(regionWidth), float(regionHeight)) * tileSizeNormalized;
          vec2 baseUV = vBaseXY * tileSizeNormalized + vTexCoord * regionSize;

          // clamp to avoid texture bleeding
          float minCoord = 0.5 / 256.0;
          float maxCoordX = regionSize.x - 0.5 / 256.0;
          float maxCoordY = regionSize.y - 0.5 / 256.0;

          baseUV.x = vBaseXY.x * tileSizeNormalized + clamp(vTexCoord.x * regionSize.x, minCoord, maxCoordX);
          baseUV.y = vBaseXY.y * tileSizeNormalized + clamp(vTexCoord.y * regionSize.y, minCoord, maxCoordY);

          vec4 baseColor = texture2D(uTexture, baseUV);

          // handle special transparent colors
          if (vBaseXY.x > -1.0 && tileSize < 256.0) {
              vec3 transparent1 = vec3(0.866, 0.298, 0.792);
              vec3 transparent2 = vec3(0.705, 0.251, 0.643);
              if (distance(baseColor.rgb, transparent1) < 0.01 ||
                  distance(baseColor.rgb, transparent2) < 0.01) {
                  baseColor.a = 0.0;
              }
          }

          // palette swap
          int baseRow = uPaletteIndex * 2;
          for (int i = 0; i < 8; i++) {
              if (i >= uColorCount) break;
              vec4 fromColor = getPaletteColor(baseRow, i);
              vec4 toColor = getPaletteColor(baseRow + 1, i);
              if (distance(baseColor.rgb, fromColor.rgb) < 0.01) {
                  baseColor = vec4(toColor.rgb, baseColor.a);
                  break;
              }
          }

          if (moreDark == 0) {
              baseColor.rgb *= 0.7;
          }

          gl_FragColor = baseColor;

      }
    `);p(this,xe);p(this,ge);this.gl=e,this.use(),e.uniformMatrix3fv(this.getUniform("uView"),!1,this.createViewMatrix()),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,o),e.uniform1i(this.getUniform("uPaletteTex"),1),e.uniform1f(this.getUniform("uPaletteHeight"),a),e.uniform1f(this.getUniform("uMaxColors"),8),c(this,xe,e.createBuffer()),c(this,ge,e.createBuffer())}createViewMatrix(e=0,o=0){return new Float32Array([1,0,0,0,1,0,e,o,1])}get positionBuffer(){return s(this,xe)}get texCoordBuffer(){return s(this,ge)}}xe=new WeakMap,ge=new WeakMap;class ls{constructor(t,e){this.gl=t,this.texture=t.createTexture(),this.width=0,this.height=0,this.isLoaded=!1,this.pixels=null,this.image=new Image,this.image.src=e,this.loadPromise=new Promise((o,a)=>{this.image.onload=()=>{this.width=this.image.width,this.height=this.image.height;const i=document.createElement("canvas");i.width=this.width,i.height=this.height;const n=i.getContext("2d");n.drawImage(this.image,0,0),this.pixels=n.getImageData(0,0,this.width,this.height).data,this.bind(),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this.image),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),this.isLoaded=!0,o(this)},this.image.onerror=()=>{console.error(`Failed to load texture: ${e}`),this.isLoaded=!1,a(new Error(`Failed to load texture: ${e}`))}})}bind(t=0){const e=this.gl;e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,this.texture)}async ready(){return this.loadPromise}}class cs{constructor(t,e){this.image=t,this.onClick=e,this._onMouseMove=this._onMouseMove.bind(this),this._onMouseDown=this._onMouseDown.bind(this),this._onTouchStart=this._onTouchStart.bind(this),this._onTouchMove=this._onTouchMove.bind(this),L.addEventListener("mousemove",this._onMouseMove),L.addEventListener("mousedown",this._onMouseDown),L.addEventListener("touchstart",this._onTouchStart,{passive:!1}),L.addEventListener("touchmove",this._onTouchMove,{passive:!1})}_onMouseMove(t){const e=L.getBoundingClientRect(),o={x:t.clientX-e.left,y:t.clientY-e.top};this.image.handleHover({x:o.x,y:o.y}),t.preventDefault()}_onMouseDown(t){const e=L.getBoundingClientRect(),o={x:t.clientX-e.left,y:t.clientY-e.top};this.image.isPointInside(o)&&this.onClick(this.image),t.preventDefault()}_onTouchStart(t){const e=t.touches[0],o=L.getBoundingClientRect(),a={x:e.clientX-o.left,y:e.clientY-o.top};this.image.isPointInside(a)&&this.onClick(this.image),t.preventDefault()}_onTouchMove(t){const e=t.touches[0],o=L.getBoundingClientRect(),a={x:e.clientX-o.left,y:e.clientY-o.top};this.image.handleHover({x:a.x,y:a.y}),t.preventDefault()}destroy(){L.removeEventListener("mousemove",this._onMouseMove),L.removeEventListener("mousedown",this._onMouseDown),L.removeEventListener("touchstart",this._onTouchStart),L.removeEventListener("touchmove",this._onTouchMove),delete this.image,delete this.onClick}}class hs{constructor(t){this.image=t,this.juiceTime=0,this.juiceDuration=.5,this.juiceAmplitude=.05+Math.random()*.15,this.juiceCooldown=Math.random()+.5,this.juiceDelay=Math.random()*this.juiceCooldown,this.juiceCooldownTimer=0,this._manualJuice=null,this._hoverJuiceTriggered=!1,this._hoverJuiceTime=0,this._hoverJuiceDuration=0,this._hoverJuiceAmplitude=0}setJuiceAmplitude(t){this.juiceAmplitude=t}triggerManualJuice(t=.2,e=.4,o=null,a){this._manualJuice={time:0,duration:t,amplitude:e,scale:o,_onClick:a}}triggerHoverJuice(t=.2,e=.4){this._hoverJuiceTriggered=!0,this._hoverJuiceTime=0,this._hoverJuiceDuration=t,this._hoverJuiceAmplitude=e}update(t,e){let o=1,a=1;if(this._manualJuice){const i=this._manualJuice;i.time+=t;const n=Math.min(i.time/i.duration,1),l=Math.sin(n*Math.PI);if(i.scale){const u=1+(i.scale-1)*l;o=u,a=u}else o+=l*i.amplitude,a-=l*i.amplitude*.5;n>=1&&(this._manualJuice._onClick&&this._manualJuice._onClick(this.image),this._manualJuice=null)}if(this._hoverJuiceTriggered){this._hoverJuiceTime+=t;const i=Math.min(this._hoverJuiceTime/this._hoverJuiceDuration,1),n=Math.sin(i*Math.PI);o+=n*this._hoverJuiceAmplitude,a-=n*this._hoverJuiceAmplitude*.5,i>=1&&(this._hoverJuiceTriggered=!1)}if(!this._manualJuice&&!this._hoverJuiceTriggered&&!e)if(this.juiceCooldownTimer>0)this.juiceCooldownTimer-=t;else{this.juiceTime+=t;const i=Math.max(0,this.juiceTime-this.juiceDelay),n=Math.min(i/this.juiceDuration,1),l=Math.sin(n*Math.PI);o+=l*this.juiceAmplitude,a-=l*this.juiceAmplitude*.5,i>=this.juiceDuration&&(this.juiceTime=0,this.juiceDelay=Math.random()*.05,this.juiceCooldownTimer=this.juiceCooldown)}return{juiceScaleX:o,juiceScaleY:a}}destroy(){delete this._manualJuice,delete this.image}}var ht,it,ye,ve,q,I,$t,Te,Oe,gt;class Ke{constructor(t,{image:e,shader:o,tilesTexture:a,paletteTexture:i,width:n=8,height:l=8,x:u,y:d}){p(this,ht);p(this,it);p(this,ye);p(this,ve);p(this,q);p(this,I);p(this,$t);p(this,Te);p(this,Oe,1);p(this,gt);this.gl=t,c(this,I,e),c(this,q,o),c(this,ye,a),c(this,ve,i),c(this,$t,{x:u,y:d}),this.populateBuffers(t,n,l)}updateWidth(t){const e=this.gl,o=new Float32Array([0,0,t,0,0,s(this,I).height,t,s(this,I).height]);e.bindBuffer(e.ARRAY_BUFFER,s(this,it)),e.bufferSubData(e.ARRAY_BUFFER,0,o)}populateBuffers(t){const e=s(this,I).width,o=s(this,I).height,a=new Float32Array([0,0,e,0,0,o,e,o]),i=new Float32Array([0,0,1,0,0,1,1,1]),n=new Float32Array([s(this,I).baseX,s(this,I).baseY,s(this,I).baseX,s(this,I).baseY,s(this,I).baseX,s(this,I).baseY,s(this,I).baseX,s(this,I).baseY]);s(this,I).model=new Float32Array([e*s(this,Te)/e,0,0,0,o*s(this,Te)/o,0,s(this,$t).x,s(this,$t).y,s(this,Oe)]),s(this,q).use(),s(this,it)?(t.bindBuffer(t.ARRAY_BUFFER,s(this,it)),t.bufferSubData(t.ARRAY_BUFFER,0,a)):(c(this,it,t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,s(this,it)),t.bufferData(t.ARRAY_BUFFER,a,t.DYNAMIC_DRAW)),s(this,ht)?(t.bindBuffer(t.ARRAY_BUFFER,s(this,ht)),t.bufferSubData(t.ARRAY_BUFFER,0,i)):(c(this,ht,t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,s(this,ht)),t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW)),s(this,gt)?(t.bindBuffer(t.ARRAY_BUFFER,s(this,gt)),t.bufferSubData(t.ARRAY_BUFFER,0,n)):(c(this,gt,t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,s(this,gt)),t.bufferData(t.ARRAY_BUFFER,n,t.DYNAMIC_DRAW))}bind(t){s(this,q).use(),t.uniform1i(s(this,q).getUniform("uPaletteIndex"),s(this,I).uPaletteIndex),t.uniform1i(s(this,q).getUniform("uColorCount"),8),s(this,I).moreDark||s(this,I).hud?t.uniform1i(s(this,q).getUniform("moreDark"),1):t.uniform1i(s(this,q).getUniform("moreDark"),0),t.uniform1f(s(this,q).getUniform("tileSize"),s(this,I).tileSize),t.uniform1i(s(this,q).getUniform("regionWidth"),s(this,I).regionWidth),t.uniform1i(s(this,q).getUniform("regionHeight"),s(this,I).regionHeight),t.uniformMatrix3fv(s(this,q).getUniform("uModel"),!1,s(this,I).model),t.bindBuffer(t.ARRAY_BUFFER,s(this,it));const e=s(this,q).getAttrib("aPosition");t.enableVertexAttribArray(e),t.vertexAttribPointer(e,2,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,s(this,ht));const o=s(this,q).getAttrib("aTexCoord");t.enableVertexAttribArray(o),t.vertexAttribPointer(o,2,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,s(this,gt));const a=s(this,q).getAttrib("aBaseXY");t.enableVertexAttribArray(a),t.vertexAttribPointer(a,2,t.FLOAT,!1,0,0),s(this,ye).bind(),t.activeTexture(t.TEXTURE0+1),t.bindTexture(t.TEXTURE_2D,s(this,ve))}draw(t){s(this,it)&&(s(this,I).ui&&t.disable(t.DEPTH_TEST),t.drawArrays(t.TRIANGLE_STRIP,0,4),s(this,I).ui&&t.enable(t.DEPTH_TEST))}destroy(){this.gl.deleteBuffer(s(this,it)),this.gl.deleteBuffer(s(this,ht)),c(this,it,null),c(this,ht,null),delete this.image}get positionBuffer(){return s(this,it)}get texCoordBuffer(){return s(this,ht)}get baseXYBuffer(){return s(this,gt)}set positionBuffer(t){c(this,it,t)}set texCoordBuffer(t){c(this,ht,t)}set baseXYBuffer(t){c(this,gt,t)}get image(){return s(this,I)}}ht=new WeakMap,it=new WeakMap,ye=new WeakMap,ve=new WeakMap,q=new WeakMap,I=new WeakMap,$t=new WeakMap,Te=new WeakMap,Oe=new WeakMap,gt=new WeakMap;class us extends Ke{constructor(t,{...e}){super(t,{...e})}getCharIndex(t){return t.toUpperCase().charCodeAt(0)-65}setText(t,e,o,a){o>-1&&o!=500&&(a>-1?e=o.toString()+"/"+a:e=o.toString()),o>0&&a>0&&o>=a&&(this.image.uPaletteIndex=0),this.image.num=o,this.image.goal=a,this.positionBuffer&&(t.deleteBuffer(this.positionBuffer),this.positionBuffer=null),this.texCoordBuffer&&(t.deleteBuffer(this.texCoordBuffer),this.texCoordBuffer=null),this.baseXYBuffer&&(t.deleteBuffer(this.baseXYBuffer),this.baseXYBuffer=null);const i=this.image.tileSize,n=this.image.tileSize;this.populateBuffers(t,i,n,e)}populateBuffers(t,e,o,a="GOAL:"){const i=[],n=[],l=[],u=a.toUpperCase(),d={".":10,",":11,"!":12,"?":13,"'":14,'"':15,":":16,";":17,"(":18,")":19,"+":20,"-":21,"=":22,"*":23,"/":24,"\\":25,"%":26," ":27};let m=0;const w=this.image.tileSize??e;for(let T=0;T<u.length;T++){const f=u[T];let g=-1,v=-1;if(f>="A"&&f<="Z"?(g=27,v=f.charCodeAt(0)-65):f>="0"&&f<="9"?(g=28,v=f.charCodeAt(0)-48):d[f]!==void 0&&(g=28,v=d[f]),g!==-1){const S=v,Y=g,R=m;i.push(R,0,R+e,0,R,o,R+e,0,R+e,o,R,o),n.push(0,0,1,0,0,1,1,0,1,1,0,1);for(let E=0;E<6;E++)l.push(S,Y)}m+=w}this.positionBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW),this.texCoordBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.texCoordBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(n),t.STATIC_DRAW),this.baseXYBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.baseXYBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(l),t.STATIC_DRAW),this.vertexCount=l.length/2}draw(t){this.positionBuffer&&(t.disable(t.DEPTH_TEST),t.drawArrays(t.TRIANGLES,0,this.vertexCount),t.enable(t.DEPTH_TEST))}}class ds extends Ke{constructor(t,{...e}){super(t,{...e})}populateBuffers(t,e,o){const a=[],i=[],n=[],u=[0,8,e-8,e],d=[0,8,o-8,o];for(let m=0;m<3;m++)for(let w=0;w<3;w++){const T=u[w],f=u[w+1],g=d[m],v=d[m+1];let S=1,Y=1;m===0&&(w===2||w===0?(S=1,Y=1):(S=0,Y=1)),m===1&&(w===0&&(S=0,Y=1),w===1&&(S=0,Y=0),w===2&&(S=0,Y=1)),m===2&&(w===1&&(S=0,Y=1),w===0&&(S=1,Y=1)),a.push(T,g,f,g,T,v,f,g,f,v,T,v),m===0&&w===0?i.push(1,0,0,0,1,1,0,0,0,1,1,1):m===2&&w===0?i.push(1,1,0,1,1,0,0,1,0,0,1,0):m===1&&w===2?i.push(0,1,0,0,1,1,0,0,1,0,1,1):m===1&&w===0?i.push(1,0,1,1,0,0,1,1,0,1,0,0):m===2&&w===1?i.push(1,1,0,1,1,0,0,1,0,0,1,0):m===2&&w===2?i.push(0,1,0,0,1,1,0,0,1,0,1,1):i.push(0,0,1,0,0,1,1,0,1,1,0,1);for(let R=0;R<6;R++)n.push(S,Y)}this.positionBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(a),t.STATIC_DRAW),this.texCoordBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.texCoordBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW),this.baseXYBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.baseXYBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(n),t.STATIC_DRAW),this.vertexCount=n.length/2}draw(t){this.positionBuffer&&(t.disable(t.DEPTH_TEST),t.drawArrays(t.TRIANGLES,0,this.vertexCount),t.enable(t.DEPTH_TEST))}}class F{static async loadSound(t,e){const a=await(await fetch(e)).arrayBuffer(),i=await this.audioContext.decodeAudioData(a);this.buffers.set(t,i)}static playSound(t,e=1){const o=this.buffers.get(t);if(!o)return console.warn(`Sound "${t}" not loaded.`);const a=this.audioContext.createBufferSource();a.buffer=o;const i=this.audioContext.createGain();i.gain.value=e*this.globalSoundVolume,a.connect(i),i.connect(this.audioContext.destination),a.start()}static setGlobalSoundVolume(t){this.globalSoundVolume=Math.min(1,Math.max(0,t))}static async loadMusic(t,e,o=!0){const i=await(await fetch(e)).arrayBuffer(),n=await this.audioContext.decodeAudioData(i);this.music.set(t,{buffer:n,source:null,gainNode:null,isPlaying:!1,loop:o})}static playMusic(t){const e=this.music.get(t);if(!e)return console.warn(`Music "${t}" not loaded.`);if(e.isPlaying)return;const o=this.audioContext.createBufferSource();o.buffer=e.buffer,o.loop=e.loop;const a=this.audioContext.createGain();a.gain.value=this.globalMusicVolume,o.connect(a),a.connect(this.audioContext.destination),o.start(),e.source=o,e.gainNode=a,e.isPlaying=!0,e.loop||(o.onended=()=>{e.isPlaying=!1,e.source=null,e.gainNode=null})}static stopMusic(t){const e=this.music.get(t);e&&e.isPlaying&&e.source&&(e.source.stop(),e.isPlaying=!1,e.source=null,e.gainNode=null)}static setGlobalMusicVolume(t){this.globalMusicVolume=Math.min(1,Math.max(0,t)),this.music.forEach(e=>{e.gainNode&&(e.gainNode.gain.value=this.globalMusicVolume)})}static isPlaying(t){const e=this.music.get(t);return e?e.isPlaying:!1}}U(F,"audioContext",new(window.AudioContext||window.webkitAudioContext)),U(F,"buffers",new Map),U(F,"music",new Map),U(F,"globalSoundVolume",1),U(F,"globalMusicVolume",1);var Qt,Zt,rt,te,Z,Se,be,It,Bt,zt,ee,Be,Ht,Re,yt,Lt,Ve,Pe,Ae,Ce,Ye,_e,se,oe,ie,Ee,re,Rt,Pt,ts;let N=(ts=class{constructor(t,{baseX:e,baseY:o,x:a,y:i,tileSize:n=8,scaleFactor:l=1,shader:u,tilesTexture:d,paletteTexture:m,uPaletteIndex:w,moreDark:T=!1,nineSlice:f=!1,width:g=8,height:v=8,tilemap:S=[],hud:Y=!0,ui:R=!1,regionWidth:E=1,regionHeight:b=1,updateJuice:P=!0,onClick:D=null,isRestartButton:X=!1}){p(this,Qt);p(this,Zt);p(this,rt);p(this,te);p(this,Z);p(this,Se);p(this,be);p(this,It);p(this,Bt);p(this,zt);p(this,ee);p(this,Be);p(this,Ht,1);p(this,Re,!1);p(this,yt);p(this,Lt);p(this,Ve);p(this,Pe);p(this,Ae);p(this,Ce,!1);p(this,Ye);p(this,_e);p(this,se);p(this,oe);p(this,ie,!0);p(this,Ee,!1);p(this,re);p(this,Rt);p(this,Pt);this._onClick=D,c(this,Ee,X),c(this,ie,P),c(this,se,E),c(this,oe,b),c(this,Ae,a),c(this,Pe,i),c(this,Ve,S),c(this,Re,f),c(this,Be,T),c(this,It,n),c(this,Qt,e),c(this,Zt,o),c(this,Ye,Y),c(this,_e,R),this._mouseInside=!1,this.gl=t,this.hoverTriggered=!1,c(this,rt,{x:a,y:i}),c(this,Se,u),c(this,Z,l),c(this,be,d),c(this,It,n),c(this,Bt,g),c(this,zt,v),s(this,Re)?(c(this,yt,s(this,Bt)*s(this,Z)),c(this,Lt,s(this,zt)*s(this,Z))):(c(this,yt,s(this,It)*s(this,Z)),c(this,Lt,s(this,It)*s(this,Z))),c(this,ee,w),c(this,re,new cs(this,()=>this.onClick())),c(this,Rt,new hs(this)),this.type==="Text"?c(this,Pt,new us(t,{image:this,shader:u,tilesTexture:d,paletteTexture:m,width:g,height:v,x:a,y:i})):this.type==="NineSlice"?c(this,Pt,new ds(t,{image:this,shader:u,tilesTexture:d,paletteTexture:m,width:g,height:v,x:a,y:i})):c(this,Pt,new Ke(t,{image:this,shader:u,tilesTexture:d,paletteTexture:m,width:g,height:v,x:a,y:i}))}handleHover(t){this._lastMouseX=t.x,this._lastMouseY=t.y;const e=this.isPointInside({x:t.x,y:t.y});e&&!this._mouseInside?(this._mouseInside=!0,s(this,Rt).triggerHoverJuice(.2,.4),this._hoverJuiceTriggered=!0,this._hoverJuiceTime=0,this._hoverJuiceDuration=.2,this._hoverJuiceAmplitude=.4):!e&&this._mouseInside&&(this._mouseInside=!1)}get isRestartButton(){return s(this,Ee)}onClick(){s(this,ie)&&F.playSound("touch"),this.triggerJuiceAndToggle()}destroy(){c(this,Ht,1),s(this,re).destroy(),s(this,Pt).destroy(),s(this,Rt).destroy(),delete this.imageInteraction,delete this.imageRenderer,delete this.imageAnimator,delete this._onClick,delete this}triggerJuiceAndToggle(){s(this,Rt).triggerManualJuice(.15,.6,null,this._onClick)}isPointInside(t){return t.x>=s(this,rt).x&&t.x<=s(this,rt).x+s(this,yt)&&t.y>=s(this,rt).y&&t.y<=s(this,rt).y+s(this,Lt)}updateJuice(t){return s(this,ie)?s(this,Rt).update(t):{juiceScaleX:1,juiceScaleY:1}}bind(t){this.imageRenderer.bind(t)}draw(t){this.imageRenderer.draw(t)}updateProperties({position:t,scale:e,juiceScaleX:o=1,juiceScaleY:a=1,dt:i=0,offsetX:n,x:l,y:u,offsetY2:d,screenScale:m}){c(this,Z,e),c(this,yt,s(this,Bt)*s(this,Z)),c(this,Lt,s(this,zt)*s(this,Z));const w=s(this,yt)*.5,T=s(this,Lt)*.5;s(this,rt).x=t.x,s(this,rt).y=t.y,c(this,te,new Float32Array([s(this,Z)*o,0,0,0,s(this,Z)*a,0,s(this,rt).x+w*(1-o),s(this,rt).y+T*(1-a),s(this,Ht)]))}get zIndex(){return s(this,Ht)}get hud(){return s(this,Ye)}get ui(){return s(this,_e)}get imageRenderer(){return s(this,Pt)}get imageInteraction(){return s(this,re)}get position(){return s(this,rt)}get widthUtil(){return s(this,yt)}set widthUtil(t){c(this,yt,t)}get width(){return s(this,Bt)}setWidth(t){c(this,Bt,t),s(this,Pt).updateWidth(t)}set width(t){c(this,Bt,t)}get height(){return s(this,zt)}set height(t){c(this,zt,t)}get regionWidth(){return s(this,se)}set regionWidth(t){c(this,se,t)}get regionHeight(){return s(this,oe)}set regionHeight(t){c(this,oe,t)}get scaleFactor(){return s(this,Z)}set scaleFactor(t){c(this,Z,t)}get shader(){return s(this,Se)}get model(){return s(this,te)}set model(t){c(this,te,t)}get tilesTexture(){return s(this,be)}get moreDark(){return s(this,Be)}set zIndex(t){c(this,Ht,t)}set selectLevelAnimation(t){c(this,Ce,t)}get row(){return s(this,Pe)}get col(){return s(this,Ae)}get baseX(){return s(this,Qt)}get baseY(){return s(this,Zt)}get positionBuffer(){return this.imageRenderer.positionBuffer}get texCoordBuffer(){return this.imageRenderer.texCoordBuffer}set positionBuffer(t){this.imageRenderer.positionBuffer=t}set texCoordBuffer(t){this.imageRenderer.texCoordBuffer=t}set baseXYBuffer(t){this.imageRenderer.baseXYBuffer=t}get tileSize(){return s(this,It)}get selectLevelAnimation(){return s(this,Ce)}get baseX(){return s(this,Qt)}get baseY(){return s(this,Zt)}set uPaletteIndex(t){c(this,ee,t)}get uPaletteIndex(){return s(this,ee)}get imageAnimator(){return s(this,Rt)}get type(){return"Image"}},Qt=new WeakMap,Zt=new WeakMap,rt=new WeakMap,te=new WeakMap,Z=new WeakMap,Se=new WeakMap,be=new WeakMap,It=new WeakMap,Bt=new WeakMap,zt=new WeakMap,ee=new WeakMap,Be=new WeakMap,Ht=new WeakMap,Re=new WeakMap,yt=new WeakMap,Lt=new WeakMap,Ve=new WeakMap,Pe=new WeakMap,Ae=new WeakMap,Ce=new WeakMap,Ye=new WeakMap,_e=new WeakMap,se=new WeakMap,oe=new WeakMap,ie=new WeakMap,Ee=new WeakMap,re=new WeakMap,Rt=new WeakMap,Pt=new WeakMap,ts);class Dt extends N{constructor(t,e){super(t,{...e,nineSlice:!0}),this.zIndex=2,this.uPaletteIndex=e.uPaletteIndex??6}get type(){return"NineSlice"}draw(t){this.imageRenderer.draw(t)}}var Me,Xe,Ie;class Xt extends N{constructor(e,{text:o,...a}){super(e,a);p(this,Me,0);p(this,Xe,0);p(this,Ie,null);c(this,Ie,o),this.setText(e,o)}setText(e,o,a,i){this.imageRenderer.setText(e,o,a,i)}updateProperties({position:e,scale:o,juiceScaleX:a=1,juiceScaleY:i=1}){this.position.x=e.x,this.position.y=e.y,this.scaleFactor=o,this.width=this.imageRenderer.vertexCount/6*8*this.scaleFactor,this.height=8*this.scaleFactor,this.width=this.imageRenderer.vertexCount/6*this.tileSize*this.scaleFactor,this.height=this.tileSize*this.scaleFactor;const n=this.width*.5,l=this.height*.5;this.model=new Float32Array([this.width*this.scaleFactor/this.width*a,0,0,0,this.height*this.scaleFactor/this.height*i,0,this.position.x+n*(1-a),this.position.y+l*(1-i),this.zIndex])}isPointInside(e){const{x:o,y:a}=this.position,i=this.imageRenderer.vertexCount/6*this.tileSize*this.scaleFactor,n=this.tileSize*this.scaleFactor;return e.x>=o&&e.x<=o+i&&e.y>=a&&e.y<=a+n}get type(){return"Text"}get num(){return s(this,Me)}set num(e){e===0&&(this.uPaletteIndex=5),c(this,Me,e)}get goal(){return s(this,Xe)}set goal(e){c(this,Xe,e)}get text(){return s(this,Ie)}}Me=new WeakMap,Xe=new WeakMap,Ie=new WeakMap;function fs(h,t,e,o,a,i,n){if(e.x<0)return;t.use();const l=L.width,u=L.height,d=e.screenX/l*2-1,m=1-e.screenY/u*2,w=(e.screenX+e.screenWidth)/l*2-1,T=1-(e.screenY+e.screenHeight)/u*2;let f=null;if(!n)if(a){const v=(e.y*256+e.x)*4,S=o[v]/255,Y=o[v+1]/255,R=o[v+2]/255,E=o[v+3]/255;f=[S,Y,R,E]}else i&&(f=i);const g=h.getAttribLocation(t.program,"a_position");if(f){const v=new Float32Array([d,m,w,m,d,T,d,T,w,m,w,T]);h.bindBuffer(h.ARRAY_BUFFER,t.positionBuffer),h.bufferData(h.ARRAY_BUFFER,v,h.STREAM_DRAW),h.vertexAttribPointer(g,2,h.FLOAT,!1,0,0),h.enableVertexAttribArray(g),h.uniform4fv(t.getUniform("u_color"),f),h.drawArrays(h.TRIANGLES,0,6)}else{const v=new Float32Array([d,m,w,m,w,m,w,T,w,T,d,T,d,T,d,m]);h.bindBuffer(h.ARRAY_BUFFER,t.positionBuffer),h.bufferData(h.ARRAY_BUFFER,v,h.STREAM_DRAW),h.vertexAttribPointer(g,2,h.FLOAT,!1,0,0),h.uniform4fv(t.getUniform("u_color"),[0,0,0,1]),h.drawArrays(h.LINES,0,8)}}class ws extends N{constructor(...t){super(...t),this.zIndex=1}updateProperties(t,{position:e,scale:o,juiceScaleX:a=1,juiceScaleY:i=1,zoom:n,zoomCenter:l={uPx:0,vPx:0}}){super.updateProperties({position:e,scale:o,juiceScaleX:a,juiceScaleY:i});const u=1/n,d=this.tilesTexture.width;let m=l.uPx/d,w=l.vPx/d;m=Math.max(0,Math.min(1-u,m)),w=Math.max(0,Math.min(1-u,w));const T=new Float32Array([m,w,m+u,w,m,w+u,m+u,w+u]);t.bindBuffer(t.ARRAY_BUFFER,this.texCoordBuffer),t.bufferData(t.ARRAY_BUFFER,T,t.STATIC_DRAW)}updateTexture(t,e){t.bindTexture(t.TEXTURE_2D,this.tilesTexture.texture),t.texSubImage2D(t.TEXTURE_2D,0,0,0,this.tilesTexture.width,this.tilesTexture.height,t.RGBA,t.UNSIGNED_BYTE,e),t.bindTexture(t.TEXTURE_2D,null)}}var ze,ae,Jt;const _=class _{constructor(t){p(this,ae,!1);p(this,Jt,null);_.gl=t}static getCenterOfViewport(t,e,o,a,i,n,l){let u,d;if(e instanceof Dt)u=e.width,d=e.height;else if(e.imageRenderer){let g=e.imageRenderer.vertexCount/6;g||(g=1);const v=e.tileSize||8;u=g*v,d=v}else u=e.width||8,d=e.height||8;const m=u*o,w=d*o,T=n+(a/2-m/2),f=l+(i/2-w/2);return{centerX:T,centerY:f}}static drawPixelEditor(t){t?(_.state.pixelEditor.draw(_.gl),_.state.pixelEditor.setVisible(!0)):_.state.pixelEditor.setVisible(!1)}drawLoop(t){const e=_.state;let o=e.commaKey;const{scale:a,displayWidth:i,displayHeight:n,offsetX:l,offsetY:u}=e.viewport.draw(o);_.scale=a,_.offsetX=l,_.offsetY=u,_.displayWidth=i,_.displayHeight=n,_.drawPixelEditor(o)}start(){c(this,ae,!0);const t=e=>{s(this,ae)&&(this.lastTime===void 0&&(this.lastTime=e),_.deltaTime=(e-this.lastTime)/1e3,this.lastTime=e,this.drawLoop(e),c(this,Jt,requestAnimationFrame(t)))};c(this,Jt,requestAnimationFrame(t))}stop(){c(this,ae,!1),s(this,Jt)&&cancelAnimationFrame(s(this,Jt))}async init(){}static destroyScene(){_.current&&(_.current.destroy(),_.current=null)}static async changeScene(t){_.current&&(_.current.stop(),_.destroyScene());const e=new t(_.gl);await e.init(),_.current=e,e.start()}static get state(){return s(_,ze)}static set state(t){c(this,ze,t)}};ze=new WeakMap,ae=new WeakMap,Jt=new WeakMap,U(_,"scale"),U(_,"displayWidth"),U(_,"displayHeight"),U(_,"offsetX"),U(_,"offsetY"),p(_,ze),U(_,"gl"),U(_,"triggerTilemapZoom",!1),U(_,"currentNumLevel",1),U(_,"rPressed",!1),U(_,"music",!0),U(_,"sound",!0),U(_,"current",null),U(_,"gl",null),U(_,"deltaTime",0);let r=_;var Le;class ps extends Ue{constructor(e){super(e,`
      attribute vec2 a_position;

      void main() {
        // a_position is in clip space (-1 to 1)
        gl_Position = vec4(a_position, 0.0, 1.0);
      }
    `,`
      precision mediump float;

      uniform vec4 u_color; // pixel color

      void main() {
        gl_FragColor = u_color;
      }
    `);p(this,Le);this.use(),e.uniform4fv(this.getUniform("u_color"),[0,0,0,1]),c(this,Le,e.createBuffer())}get positionBuffer(){return s(this,Le)}}Le=new WeakMap;async function ms(h){const t=document.createElement("canvas");t.width=h.pixelArtImage.tilesTexture.width,t.height=h.pixelArtImage.tilesTexture.height;const e=t.getContext("2d"),o=new ImageData(new Uint8ClampedArray(h.pixels),h.pixelArtImage.tilesTexture.width,h.pixelArtImage.tilesTexture.height);e.putImageData(o,0,0);const i=await(await new Promise(l=>t.toBlob(l,"image/png"))).arrayBuffer();(await fetch("/save-texture",{method:"POST",headers:{"Content-Type":"application/octet-stream","X-Filename":"tiles.png"},body:i})).ok?console.log("Texture saved successfully!"):console.error("Failed to save texture")}var ne;class xs extends Ue{constructor(e){super(e,`
      attribute vec2 a_position;
      uniform vec2 uResolution;
      uniform mat3 uModel;
      uniform mat3 uView;

      varying vec2 v_uv;

      void main() {
        vec3 worldPos = uView * uModel * vec3(a_position, 1.0);

        vec2 clipPos = (worldPos.xy / uResolution) * 2.0 - 1.0;
        clipPos.y *= -1.0;

        v_uv = a_position; // store position for gradient

        gl_Position = vec4(clipPos, 0.0, 1.0);
      }
    `,`
      precision mediump float;
      varying vec2 v_uv;

      void main() {
        float hue = v_uv.x; // 0 → 1 across width

        // Convert hue to RGB using HSV model
        float r = abs(hue * 6.0 - 3.0) - 1.0;
        float g = 2.0 - abs(hue * 6.0 - 2.0);
        float b = 2.0 - abs(hue * 6.0 - 4.0);

        vec3 color = clamp(vec3(r, g, b), 0.0, 1.0);

        gl_FragColor = vec4(color, 1.0);
      }
    `);p(this,ne);this.use(),e.uniformMatrix3fv(this.getUniform("uView"),!1,this.createViewMatrix()),e.uniform2f(this.getUniform("uResolution"),window.innerWidth,window.innerHeight),c(this,ne,e.createBuffer());const i=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]);e.bindBuffer(e.ARRAY_BUFFER,s(this,ne)),e.bufferData(e.ARRAY_BUFFER,i,e.STATIC_DRAW),e.uniformMatrix3fv(this.getUniform("uModel"),!1,new Float32Array([1,0,0,0,1,0,0,0,1]))}draw(e,o,a,i,n){this.use();const l=new Float32Array([i,0,0,0,n,0,o,a,1]);e.uniformMatrix3fv(this.getUniform("uModel"),!1,l);const u=this.getAttrib("a_position");e.bindBuffer(e.ARRAY_BUFFER,s(this,ne)),e.enableVertexAttribArray(u),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLES,0,6)}}ne=new WeakMap;var le,Ot,ce;class pe extends Ue{constructor(e,o=[0,0,0]){super(e,`
      attribute vec2 a_position;
      attribute vec3 a_color;
      uniform vec2 uResolution;
      uniform mat3 uModel;
      uniform mat3 uView;

      varying vec3 v_color;

      void main() {
        vec3 worldPos = uView * uModel * vec3(a_position, 1.0);

        vec2 clipPos = (worldPos.xy / uResolution) * 2.0 - 1.0;
        clipPos.y *= -1.0;

        gl_Position = vec4(clipPos, 0.0, 1.0);
        v_color = a_color;
      }
    `,`
      precision mediump float;
      varying vec3 v_color;

      void main() {
        gl_FragColor = vec4(v_color, 1.0);
      }
    `);p(this,le);p(this,Ot);p(this,ce);c(this,ce,o),this.use(),e.uniformMatrix3fv(this.getUniform("uView"),!1,this.createViewMatrix()),e.uniform2f(this.getUniform("uResolution"),window.innerWidth,window.innerHeight),c(this,le,e.createBuffer());const n=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]);e.bindBuffer(e.ARRAY_BUFFER,s(this,le)),e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW),e.uniformMatrix3fv(this.getUniform("uModel"),!1,new Float32Array([1,0,0,0,1,0,0,0,1]));const l=o;c(this,Ot,e.createBuffer()),e.bindBuffer(e.ARRAY_BUFFER,s(this,Ot)),e.bufferData(e.ARRAY_BUFFER,new Float32Array(18),e.DYNAMIC_DRAW),this.updateColor(e,[...l,...l,...l,...l,...l,...l])}updateColor(e,o){e.bindBuffer(e.ARRAY_BUFFER,s(this,Ot)),e.bufferSubData(e.ARRAY_BUFFER,0,new Float32Array(o))}draw(e,o,a,i,n){this.use();const l=new Float32Array([i,0,0,0,n,0,o,a,1]);e.uniformMatrix3fv(this.getUniform("uModel"),!1,l);const u=this.getAttrib("a_position");e.bindBuffer(e.ARRAY_BUFFER,s(this,le)),e.enableVertexAttribArray(u),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);const d=this.getAttrib("a_color");e.bindBuffer(e.ARRAY_BUFFER,s(this,Ot)),e.enableVertexAttribArray(d),e.vertexAttribPointer(d,3,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLES,0,6)}get color(){return s(this,ce)}set color(e){c(this,ce,e)}}le=new WeakMap,Ot=new WeakMap,ce=new WeakMap;var he;class gs extends Ue{constructor(e){super(e,`
      attribute vec2 a_position;
      uniform vec2 uResolution;
      uniform mat3 uModel;
      uniform mat3 uView;

      varying vec2 v_uv;

      void main() {
        vec3 worldPos = uView * uModel * vec3(a_position, 1.0);
        vec2 clipPos = (worldPos.xy / uResolution) * 2.0 - 1.0;
        clipPos.y *= -1.0;

        v_uv = a_position; // 0–1 position in quad space
        gl_Position = vec4(clipPos, 0.0, 1.0);
      }
    `,`
      precision mediump float;
      varying vec2 v_uv;

      uniform vec3 uHueColor; // the hue from the hue bar (RGB)

      void main() {
        // Interpolate horizontally from white to hue color
        vec3 topColor = mix(vec3(1.0), uHueColor, v_uv.x);

        // Interpolate vertically from topColor to black
        vec3 finalColor = mix(topColor, vec3(0.0), v_uv.y);

        gl_FragColor = vec4(finalColor, 1.0);
      }
    `);p(this,he);this.use(),e.uniformMatrix3fv(this.getUniform("uView"),!1,this.createViewMatrix()),e.uniform2f(this.getUniform("uResolution"),window.innerWidth,window.innerHeight),c(this,he,e.createBuffer());const i=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]);e.bindBuffer(e.ARRAY_BUFFER,s(this,he)),e.bufferData(e.ARRAY_BUFFER,i,e.STATIC_DRAW)}draw(e,o,a,i,n,l){this.use(),e.uniform3fv(this.getUniform("uHueColor"),l);const u=new Float32Array([i,0,0,0,n,0,o,a,1]);e.uniformMatrix3fv(this.getUniform("uModel"),!1,u);const d=this.getAttrib("a_position");e.bindBuffer(e.ARRAY_BUFFER,s(this,he)),e.enableVertexAttribArray(d),e.vertexAttribPointer(d,2,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLES,0,6)}}he=new WeakMap;function Ze(h){const t=Math.round(h[0]*255),e=Math.round(h[1]*255),o=Math.round(h[2]*255);return`#${((1<<24)+(t<<16)+(e<<8)+o).toString(16).slice(1)}`}async function ys(h){if(!h||!h.palettes){console.error("No palettes to save.");return}try{const t=h.palettes.map(o=>({from:o.from.map(a=>Ze(a.color||[0,0,0,1])),to:o.to.map(a=>Ze(a.color||[0,0,0,1]))})),e=await fetch("/save-palettes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(await e.text());console.log("Palettes saved successfully!")}catch(t){console.error("Error saving palettes:",t)}}var W,ft,k,M,Fe,vt,Vt,Ft,C,ue,y,tt,jt,Tt,At,De,ut,at,dt,wt,Ct,nt,et,pt,mt,de,St,Yt,fe,bt,_t,We,Et,V,st,ot,z,Mt,K,es,Ge,ss,He,me;class vs{constructor(t,e,o,a,i,n=null){p(this,K);p(this,W);p(this,ft);p(this,k);p(this,M);p(this,Fe);p(this,vt,50);p(this,Vt,50);p(this,Ft);p(this,C);p(this,ue,!1);p(this,y);p(this,tt,!0);p(this,jt);p(this,Tt,!1);p(this,At,0);p(this,De);p(this,ut);p(this,at,50);p(this,dt,300*2);p(this,wt,200);p(this,Ct,20);p(this,nt,50);p(this,et,300*2);p(this,pt,200);p(this,mt,20);p(this,de);p(this,St,-1);p(this,Yt,-1);p(this,fe);p(this,bt,-1);p(this,_t,-1);p(this,We);p(this,Et,[1,0,0,1]);p(this,V,0);p(this,st,1);p(this,ot,1);p(this,z);p(this,Mt);this._onGetPaletteTexture=n,c(this,z,[]);for(let f=0;f<i.length;f++){s(this,z)[f]={from:[],to:[]};for(let g=0;g<i[f].from.length;g++){const v=new pe(t,[i[f].from[g][0],i[f].from[g][1],i[f].from[g][2]]);s(this,z)[f].from[g]=v;const S=new pe(t,[i[f].to[g][0],i[f].to[g][1],i[f].to[g][2]]);s(this,z)[f].to[g]=S}}c(this,ut,new pe(t)),c(this,De,new xs(t)),c(this,We,new gs(t)),c(this,de,new pe(t)),c(this,fe,new pe(t));const l=[0,0,0];s(this,de).updateColor(t,[l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2]]),s(this,fe).updateColor(t,[l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2],l[0],l[1],l[2]]),c(this,Fe,new ps(t));const u=256;c(this,C,o.pixels),c(this,W,new ws(t,{tilesTexture:o,shader:e,tileSize:u,paletteTexture:a,uPaletteIndex:500,width:u,height:u,baseX:0,baseY:0})),c(this,Ft,new Dt(t,{shader:e,tilesTexture:o,paletteTexture:a,width:256,height:256}));let d=1,m={u:.5,v:.5,uPx:0,vPx:0};c(this,ft,d),c(this,k,m);let w=!1;this.lastMousePos={x:0,y:0},c(this,M,{x:-1,y:-1,screenX:0,screenY:0,screenWidth:0,screenHeight:0}),this._onMouseMove=f=>{if(!s(this,Tt))return;const g=L.getBoundingClientRect(),v=f.clientX-g.left,S=f.clientY-g.top;if(s(this,jt)){if(v>=s(this,nt)&&v<=s(this,nt)+s(this,pt)&&S>=s(this,et)&&S<=s(this,et)+s(this,mt)){c(this,bt,v),c(this,_t,S),c(this,st,Math.min(Math.max((v-s(this,nt))/s(this,pt),0),1)),c(this,ot,1-Math.min(Math.max((S-s(this,et))/s(this,mt),0),1));const B=ct(this,K,me).call(this,s(this,V),s(this,st),s(this,ot));c(this,y,B),s(this,ut).updateColor(t,[B[0],B[1],B[2],B[0],B[1],B[2],B[0],B[1],B[2],B[0],B[1],B[2],B[0],B[1],B[2],B[0],B[1],B[2]]),c(this,tt,!1);return}if(v>=s(this,at)&&v<=s(this,at)+s(this,wt)&&S>=s(this,dt)&&S<=s(this,dt)+s(this,Ct)){c(this,St,v),c(this,Yt,S);const B=(v-s(this,at))/s(this,wt);c(this,V,Math.min(Math.max(B,0),1)),c(this,Et,this._hueToRGB(s(this,V)));const A=ct(this,K,me).call(this,s(this,V),s(this,st),s(this,ot));c(this,y,A),s(this,ut).updateColor(t,[A[0],A[1],A[2],A[0],A[1],A[2],A[0],A[1],A[2],A[0],A[1],A[2],A[0],A[1],A[2],A[0],A[1],A[2]]),c(this,tt,!1);return}}s(this,jt)&&ct(this,K,ss).call(this,t,u);const Y=s(this,W).position,R=s(this,W).model,E=Y.x,b=Y.y,P=R[0]*s(this,W).width,D=R[4]*s(this,W).height,X=v>=E&&v<=E+P&&S>=b&&S<=b+D;if(w&&X){const B=v-this.lastMousePos.x,A=S-this.lastMousePos.y,J=s(this,W).width,j=J/s(this,ft),G=B/P*j,lt=A/D*j;s(this,k).uPx-=G,s(this,k).vPx-=lt,s(this,k).uPx=Math.min(Math.max(0,s(this,k).uPx),J-j),s(this,k).vPx=Math.min(Math.max(0,s(this,k).vPx),J-j)}if(this.lastMousePos.x=v,this.lastMousePos.y=S,X){const B=s(this,W).width,A=B/s(this,ft),J=(v-E)/P,j=(S-b)/D;let G=s(this,k).uPx+J*A,lt=s(this,k).vPx+j*A;G=Math.min(B-1,Math.max(0,Math.floor(G))),lt=Math.min(B-1,Math.max(0,Math.floor(lt))),s(this,M).x=G,s(this,M).y=lt;const we=P/A,O=D/A;s(this,M).screenX=Math.round(E+(G-s(this,k).uPx)*we),s(this,M).screenY=Math.round(b+(lt-s(this,k).vPx)*O),s(this,M).screenWidth=Math.round(we),s(this,M).screenHeight=Math.round(O)}else s(this,M).x=-1,s(this,M).y=-1},this._onMouseDown=f=>{if(!s(this,Tt)||f.button!==0)return;c(this,jt,!0);const g=L.getBoundingClientRect(),v=f.clientX-g.left,S=f.clientY-g.top,Y=10,R=15;let E=15+s(this,At);for(let b=0;b<s(this,z).length;b++){for(let P=0;P<s(this,z)[b].from.length;P++){const D=256*this.mainScale+25+s(this,vt),X=E,B=10,A=10;if(v>=D&&v<=D+B&&S>=X&&S<=X+A){c(this,Mt,{type:"from",paletteIndex:b,colorIndex:P}),ct(this,K,Ge).call(this,t);return}const J=256*this.mainScale+25+25+s(this,vt);if(v>=J&&v<=J+B&&S>=X&&S<=X+A){c(this,Mt,{type:"to",paletteIndex:b,colorIndex:P}),ct(this,K,Ge).call(this,t);return}E+=R}E+=Y}if(v>=s(this,nt)&&v<=s(this,nt)+s(this,pt)&&S>=s(this,et)&&S<=s(this,et)+s(this,mt)){c(this,bt,v),c(this,_t,S),c(this,st,Math.min(Math.max((v-s(this,nt))/s(this,pt),0),1)),c(this,ot,1-Math.min(Math.max((S-s(this,et))/s(this,mt),0),1));const b=ct(this,K,me).call(this,s(this,V),s(this,st),s(this,ot));c(this,y,b),s(this,ut).updateColor(t,[b[0],b[1],b[2],b[0],b[1],b[2],b[0],b[1],b[2],b[0],b[1],b[2],b[0],b[1],b[2],b[0],b[1],b[2]]),c(this,tt,!1);return}if(v>=s(this,at)&&v<=s(this,at)+s(this,wt)&&S>=s(this,dt)&&S<=s(this,dt)+s(this,Ct)){c(this,St,v),c(this,Yt,S);const b=(v-s(this,at))/s(this,wt);c(this,V,Math.min(Math.max(b,0),1)),c(this,Et,this._hueToRGB(b));const P=ct(this,K,me).call(this,s(this,V),s(this,st),s(this,ot));c(this,y,P),s(this,ut).updateColor(t,[P[0],P[1],P[2],P[0],P[1],P[2],P[0],P[1],P[2],P[0],P[1],P[2],P[0],P[1],P[2],P[0],P[1],P[2]]),c(this,tt,!1);return}if(s(this,M).x>=0&&s(this,M).y>=0){const b=(s(this,M).y*u+s(this,M).x)*4;if(s(this,tt)){const B=s(this,M).x%8,A=s(this,M).y%8,J=248+B,G=((248+A)*u+J)*4;s(this,C)[b]=s(this,C)[G],s(this,C)[b+1]=s(this,C)[G+1],s(this,C)[b+2]=s(this,C)[G+2],s(this,C)[b+3]=s(this,C)[G+3]}else s(this,y)&&(s(this,C)[b]=s(this,y)[0]*255,s(this,C)[b+1]=s(this,y)[1]*255,s(this,C)[b+2]=s(this,y)[2]*255,s(this,C)[b+3]=s(this,y)[3]*255);s(this,W).updateTexture(t,s(this,C))}},this._onMouseUp=()=>{s(this,Tt)&&c(this,jt,!1)};let T=0;this._onKeyDown=f=>{if(f.key===","){const g=Date.now();g-T<300?(r.state.commaKey=!r.state.commaKey,console.log("Double comma pressed! commaKey =",r.state.commaKey),T=0):T=g}if(s(this,Tt)){if((f.ctrlKey||f.metaKey)&&f.key.toLowerCase()==="s"&&(f.preventDefault(),console.log("Ctrl+S pressed!"),ms(this)),(f.ctrlKey||f.metaKey)&&f.key.toLowerCase()==="p"&&(f.preventDefault(),console.log("Ctrl+P pressed!"),ys(this)),f.code==="Space"&&(w=!0),f.code==="ControlLeft"||f.code==="ControlRight"){const g=this.lastMousePos.x,v=this.lastMousePos.y,S=10,Y=15;let R=15+s(this,At);for(let O=0;O<s(this,z).length;O++){for(let xt=0;xt<s(this,z)[O].from.length;xt++){const ke=256*this.mainScale+25+s(this,vt),Gt=R,Ne=10,Kt=10;if(g>=ke&&g<=ke+Ne&&v>=Gt&&v<=Gt+Kt){c(this,Mt,{type:"from",paletteIndex:O,colorIndex:xt}),console.log("PaletteIndex: ",O);const Ut=s(this,z)[O].from[xt].color;c(this,y,[Ut[0],Ut[1],Ut[2],1]),s(this,ut).updateColor(t,[s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2]]);const kt=s(this,y),Nt=ct(this,K,He).call(this,kt[0],kt[1],kt[2]);c(this,V,Nt[0]),c(this,st,Nt[1]),c(this,ot,Nt[2]),c(this,St,s(this,at)+s(this,V)*s(this,wt)),c(this,Yt,s(this,dt)+s(this,Ct)/2),c(this,bt,s(this,nt)+s(this,st)*s(this,pt)),c(this,_t,s(this,et)+(1-s(this,ot))*s(this,mt)),c(this,Et,this._hueToRGB(s(this,V))),c(this,tt,!1);return}const qt=256*this.mainScale+25+25+s(this,vt);if(g>=qt&&g<=qt+Ne&&v>=Gt&&v<=Gt+Kt){c(this,Mt,{type:"to",paletteIndex:O,colorIndex:xt}),console.log("PaletteIndex: ",O);const Ut=s(this,z)[O].to[xt].color;c(this,y,[Ut[0],Ut[1],Ut[2],1]),s(this,ut).updateColor(t,[s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2]]);const kt=s(this,y),Nt=ct(this,K,He).call(this,kt[0],kt[1],kt[2]);c(this,V,Nt[0]),c(this,st,Nt[1]),c(this,ot,Nt[2]),c(this,St,s(this,at)+s(this,V)*s(this,wt)),c(this,Yt,s(this,dt)+s(this,Ct)/2),c(this,bt,s(this,nt)+s(this,st)*s(this,pt)),c(this,_t,s(this,et)+(1-s(this,ot))*s(this,mt)),c(this,Et,this._hueToRGB(s(this,V))),c(this,tt,!1);return}R+=Y}R+=S}const E=8,b=31*E,P=31*E,D=s(this,M).x%E,X=s(this,M).y%E,B=b+D,J=((P+X)*u+B)*4,j=(s(this,M).y*u+s(this,M).x)*4,G=s(this,C)[j],lt=s(this,C)[j+1],we=s(this,C)[j+2];if(G==s(this,C)[J]&&lt==s(this,C)[J+1]&&we==s(this,C)[J+2])return;if(c(this,ue,!0),c(this,tt,!1),s(this,M).x>=0&&s(this,M).y>=0){const O=(s(this,M).y*u+s(this,M).x)*4,xt=s(this,C)[O]/255,ke=s(this,C)[O+1]/255,Gt=s(this,C)[O+2]/255,Ne=s(this,C)[O+3]/255;c(this,y,[xt,ke,Gt,Ne]),s(this,ut).updateColor(t,[s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2],s(this,y)[0],s(this,y)[1],s(this,y)[2]]);const Kt=s(this,y),qt=ct(this,K,He).call(this,Kt[0],Kt[1],Kt[2]);c(this,V,qt[0]),c(this,st,qt[1]),c(this,ot,qt[2]),c(this,St,s(this,at)+s(this,V)*s(this,wt)),c(this,Yt,s(this,dt)+s(this,Ct)/2),c(this,bt,s(this,nt)+s(this,st)*s(this,pt)),c(this,_t,s(this,et)+(1-s(this,ot))*s(this,mt)),c(this,Et,this._hueToRGB(s(this,V)))}}f.code==="KeyE"&&c(this,tt,!s(this,tt))}},this._onKeyUp=f=>{s(this,Tt)&&(f.code==="Space"&&(w=!1),(f.code==="ControlLeft"||f.code==="ControlRight")&&c(this,ue,!1))},this._onWheel=f=>{if(!s(this,Tt))return;f.preventDefault();const g=L.getBoundingClientRect(),v=f.clientX-g.left,S=f.clientY-g.top,Y=s(this,W).position.x,R=s(this,W).position.y,E=s(this,W).model[0]*s(this,W).width,b=s(this,W).model[4]*s(this,W).height;if(v<Y||v>Y+E||S<R||S>R+b){c(this,At,s(this,At)+(f.deltaY>0?-30:30));const O=0,xt=-ct(this,K,es).call(this)+window.innerHeight-50;c(this,At,Math.min(O,Math.max(xt,s(this,At))));return}const P=(v-Y)/E,D=(S-R)/b,X=s(this,W).width,B=s(this,ft),A=f.deltaY<0?Math.min(s(this,ft)*2,64):Math.max(s(this,ft)/2,1),J=X/B,j=X/A,G=s(this,k).uPx+P*J,lt=s(this,k).vPx+D*J;s(this,k).uPx=Math.round(G-P*j),s(this,k).vPx=Math.round(lt-D*j),s(this,k).uPx=Math.min(Math.max(0,s(this,k).uPx),X-j),s(this,k).vPx=Math.min(Math.max(0,s(this,k).vPx),X-j),c(this,ft,A)},L.addEventListener("mousemove",this._onMouseMove),L.addEventListener("mousedown",this._onMouseDown),window.addEventListener("mouseup",this._onMouseUp),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),L.addEventListener("wheel",this._onWheel)}_hueToRGB(t){let e=Math.abs(t*6-3)-1,o=2-Math.abs(t*6-2),a=2-Math.abs(t*6-4);return[Math.min(Math.max(e,0),1),Math.min(Math.max(o,0),1),Math.min(Math.max(a,0),1),1]}draw(t){this.mainScale=1,window.innerHeight>256*2+25+25+25+s(this,Vt)&&(this.mainScale=2),window.innerHeight>256*2*2&&(this.mainScale=3),c(this,dt,256*this.mainScale+25+s(this,Vt)),c(this,et,256*this.mainScale+25+25+s(this,Vt));const e=10,o=15;let a=15+s(this,At);for(let n=0;n<s(this,z).length;n++){for(let l=0;l<s(this,z)[n].from.length;l++)s(this,z)[n].from[l].draw(t,256*this.mainScale+25+s(this,vt),a,10,10),s(this,z)[n].to[l].draw(t,256*this.mainScale+25+25+s(this,vt),a,10,10),a+=o;a+=e}s(this,bt)>=0&&s(this,fe).draw(t,s(this,bt)-2/2,s(this,_t)-2/2,2,2);const i=s(this,Et)||[1,0,0,1];s(this,We).draw(t,s(this,nt),s(this,et),s(this,pt),s(this,mt),[i[0],i[1],i[2]]),s(this,St)>=0&&s(this,de).draw(t,s(this,St)-2/2,s(this,Yt)-2/2,2,2),s(this,Ft).updateProperties({position:{x:25,y:25},scale:this.mainScale+.2,juiceScaleX:1,juiceScaleY:1}),s(this,Ft).bind(t),s(this,Ft).draw(t),s(this,Ft).zIndex=1,s(this,W).updateProperties(t,{position:{x:s(this,vt),y:s(this,Vt)},scale:this.mainScale,juiceScaleX:1,juiceScaleY:1,zoom:s(this,ft),zoomCenter:s(this,k)}),s(this,W).bind(t),s(this,W).draw(t),s(this,W).zIndex=2,s(this,De).draw(t,s(this,at),s(this,dt),s(this,wt),s(this,Ct)),s(this,ut).draw(t,25,s(this,et),20,20),fs(t,s(this,Fe),s(this,M),s(this,C),s(this,ue),s(this,y),s(this,tt))}destroy(){L.removeEventListener("mousemove",this._onMouseMove),L.removeEventListener("mousedown",this._onMouseDown),window.removeEventListener("mouseup",this._onMouseUp),window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),L.removeEventListener("wheel",this._onWheel)}get pixelArtImage(){return s(this,W)}get pixels(){return s(this,C)}setVisible(t){c(this,Tt,t)}_updatePaletteTexture(t){if(!this._onGetPaletteTexture)return;const e=8,o=s(this,z).length*2,a=new Uint8ClampedArray(o*e*4);s(this,z).forEach((i,n)=>{const l=i.from.map(d=>d.color||[0,0,0,1]),u=i.to.map(d=>d.color||[0,0,0,1]);for(let d=0;d<e;d++){const m=(n*2*e+d)*4,w=((n*2+1)*e+d)*4,T=l[d]??[0,0,0,1],f=u[d]??[0,0,0,1],g=v=>Math.max(0,Math.min(255,Math.round(v*255)));a.set([g(T[0]),g(T[1]),g(T[2]),g(T[3]??255)],m),a.set([g(f[0]),g(f[1]),g(f[2]),g(f[3]??255)],w)}}),t.bindTexture(t.TEXTURE_2D,this._onGetPaletteTexture()),t.texSubImage2D(t.TEXTURE_2D,0,0,0,e,o,t.RGBA,t.UNSIGNED_BYTE,a)}get palettes(){return s(this,z)}}W=new WeakMap,ft=new WeakMap,k=new WeakMap,M=new WeakMap,Fe=new WeakMap,vt=new WeakMap,Vt=new WeakMap,Ft=new WeakMap,C=new WeakMap,ue=new WeakMap,y=new WeakMap,tt=new WeakMap,jt=new WeakMap,Tt=new WeakMap,At=new WeakMap,De=new WeakMap,ut=new WeakMap,at=new WeakMap,dt=new WeakMap,wt=new WeakMap,Ct=new WeakMap,nt=new WeakMap,et=new WeakMap,pt=new WeakMap,mt=new WeakMap,de=new WeakMap,St=new WeakMap,Yt=new WeakMap,fe=new WeakMap,bt=new WeakMap,_t=new WeakMap,We=new WeakMap,Et=new WeakMap,V=new WeakMap,st=new WeakMap,ot=new WeakMap,z=new WeakMap,Mt=new WeakMap,K=new WeakSet,es=function(){let o=15;for(let a=0;a<s(this,z).length;a++)o+=s(this,z)[a].from.length*15,o+=10;return o},Ge=function(t){if(!s(this,Mt))return;const{type:e,paletteIndex:o,colorIndex:a}=s(this,Mt),i=s(this,y)||[1,0,0,1];e==="from"?(s(this,z)[o].from[a].color=i,s(this,z)[o].from[a].updateColor(t,[i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2]])):e==="to"&&(s(this,z)[o].to[a].color=i,s(this,z)[o].to[a].updateColor(t,[i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2]])),this._updatePaletteTexture(t)},ss=function(t,e){if(s(this,M).x>=0&&s(this,M).y>=0){const o=(s(this,M).y*e+s(this,M).x)*4;if(s(this,tt)){const l=s(this,M).x%8,u=s(this,M).y%8,d=248+l,w=((248+u)*e+d)*4;s(this,C)[o]=s(this,C)[w],s(this,C)[o+1]=s(this,C)[w+1],s(this,C)[o+2]=s(this,C)[w+2],s(this,C)[o+3]=s(this,C)[w+3]}else s(this,y)&&(s(this,C)[o]=s(this,y)[0]*255,s(this,C)[o+1]=s(this,y)[1]*255,s(this,C)[o+2]=s(this,y)[2]*255,s(this,C)[o+3]=s(this,y)[3]*255);s(this,W).updateTexture(t,s(this,C))}},He=function(t,e,o){let a=Math.max(t,e,o),i=Math.min(t,e,o),n,l,u=a,d=a-i;if(l=a===0?0:d/a,a===i)n=0;else{switch(a){case t:n=(e-o)/d+(e<o?6:0);break;case e:n=(o-t)/d+2;break;case o:n=(t-e)/d+4;break}n/=6}return[n,l,u]},me=function(t,e,o){let a,i,n;const l=Math.floor(t*6),u=t*6-l,d=o*(1-e),m=o*(1-u*e),w=o*(1-(1-u)*e);switch(l%6){case 0:a=o,i=w,n=d;break;case 1:a=m,i=o,n=d;break;case 2:a=d,i=o,n=w;break;case 3:a=d,i=m,n=o;break;case 4:a=w,i=d,n=o;break;case 5:a=o,i=d,n=m;break}return[a,i,n,1]};function $(h,t,e,o,a,i,n,l,u,d=!0,m=[],w=!0){if(!a)return;const{juiceScaleX:T,juiceScaleY:f}=a.updateJuice(o),g=t,v=e,S=n+g*u,Y=l+v*u;d&&(a.updateProperties({position:{x:S,y:Y},scale:i,juiceScaleX:T,juiceScaleY:f,dt:o,offsetX:n,x:t,y:e,offsetY2:l}),a.bind(h),a.draw(h));for(let R=0;R<m.length;R++){const E=m[R].image,b=t+m[R].x,P=e+m[R].y,D=n+b*u,X=l+P*u,B=m[R].scaleImage,A=m[R].scaleX??T;w&&(E.updateProperties({position:{x:D,y:X},scale:B,juiceScaleX:A,juiceScaleY:f,dt:o,offsetX:n,x:t,y:e,offsetY2:l}),E.bind(h),E.draw(h))}}class Ts{constructor(t,e,o,a){this.gl=t,this.canvas=e,this.virtualWidth=o,this.virtualHeight=a,window.addEventListener("resize",()=>this.resize()),this.resize()}resize(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.gl.viewport(0,0,window.innerWidth,window.innerHeight)}draw(t=!1){const e=this.gl,o=this.canvas.width,a=this.canvas.height;e.clearColor(.72,.58,.37,1),e.clear(e.COLOR_BUFFER_BIT);const i=o/this.virtualWidth,n=a/this.virtualHeight,l=Math.min(i,n),u=this.virtualWidth*l,d=this.virtualHeight*l,m=(o-u)/(t?1:2),w=(a-d)/2;return e.enable(e.SCISSOR_TEST),e.scissor(m,w,u,d),e.clearColor(.85,.69,.45,1),e.clear(e.COLOR_BUFFER_BIT),e.disable(e.SCISSOR_TEST),{scale:l,displayWidth:u,displayHeight:d,offsetX:m,offsetY:w}}}class Ss{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.boxes){i.x+=(i.targetX-i.x)*.2,i.y+=(i.targetY-i.y)*.2;const n=r.offsetX+i.x*o,l=a+r.offsetY+i.y*o,{juiceScaleX:u,juiceScaleY:d}=i.image.updateJuice(e);i.image.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.bind(t),i.image.draw(t)}}}class bs{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.boxSpots){const n=r.offsetX+i.col*this.tilemap.tileSize*o,l=a+r.offsetY+i.row*this.tilemap.tileSize*o,{juiceScaleX:u,juiceScaleY:d}=i.image.updateJuice(e);i.image.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.bind(t),i.image.draw(t)}}}class Bs{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.confetti.confettiParticles){const{juiceScaleX:n,juiceScaleY:l}=i.image.updateJuice(e),u=r.offsetX+i.x*o,d=a+r.offsetY+i.y*o;i.image.updateProperties({position:{x:u,y:d},scale:o*.3,juiceScaleX:n,juiceScaleY:l,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.uPaletteIndex=i.colorIndex,i.image.bind(t),i.image.draw(t)}}}class Rs{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2,i=this.tilemap.door,n=r.offsetX+this.tilemap.doorCol*this.tilemap.tileSize*o,l=a+r.offsetY+this.tilemap.doorRow*this.tilemap.tileSize*o,{juiceScaleX:u,juiceScaleY:d}=i.updateJuice(e);i.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.bind(t),i.draw(t)}}class Ps{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2,i=this.tilemap.player,n=this.tilemap.playerCol*this.tilemap.tileSize,l=this.tilemap.playerRow*this.tilemap.tileSize;this.tilemap.playerX+=(n-this.tilemap.playerX)*.2,this.tilemap.playerY+=(l-this.tilemap.playerY)*.2;const u=r.offsetX+this.tilemap.playerX*o,d=a+r.offsetY+this.tilemap.playerY*o,{juiceScaleX:m,juiceScaleY:w}=i.updateJuice(e);i.updateProperties({position:{x:u,y:d},scale:o,juiceScaleX:m,juiceScaleY:w,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.bind(t),i.draw(t)}}class As{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.redButtons){i.x+=(i.targetX-i.x)*.2,i.y+=(i.targetY-i.y)*.2;const n=r.offsetX+i.x*o,l=a+r.offsetY+i.y*o,{juiceScaleX:u,juiceScaleY:d}=i.image.updateJuice(e);i.image.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.bind(t),i.image.draw(t)}}}class Cs{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.redWalls){i.x+=(i.targetX-i.x)*.2,i.y+=(i.targetY-i.y)*.2;const n=r.offsetX+i.x*o,l=a+r.offsetY+i.y*o,{juiceScaleX:u,juiceScaleY:d}=i.image.updateJuice(e);i.image.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.bind(t),i.image.draw(t)}}}class Ys{constructor(t){this.t=t,this.confettiParticles=[]}spawnConfetti(){F.playSound("winlevel",.8);const t=this.t,e=40,o=t.playerCol*t.tileSize+t.tileSize/2,a=t.playerRow*t.tileSize+t.tileSize/2,i=8,n=21;for(let l=0;l<e;l++){const u=Math.random()*Math.PI*2,d=100+Math.random()*80,m=Math.cos(u)*d,w=Math.sin(u)*d-50,T=1.2+Math.random()*.5,f=new N(t.gl,{baseX:0,baseY:0,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:4,width:t.tileSize,height:t.tileSize,tileSize:8,tilemap:t,updateJuice:!0});f.zIndex=2,this.confettiParticles.push({x:o,y:a,vx:m,vy:w,life:T,maxLife:T,image:f,colorIndex:Math.floor(Math.random()*(n-i+1))+i})}}changeLevel(){const e=r.currentNumLevel+1;if(e<=20){const i=parseInt(localStorage.getItem("cubee_levels"))||1;e>i&&localStorage.setItem("cubee_levels",e)}else{r.changeScene(qe);return}const o=`Level${r.currentNumLevel+1}`,a=Je[o];a?r.changeScene(a):console.warn(`Scene ${o} not found!`)}update(){const t=r.deltaTime;for(let e=this.confettiParticles.length-1;e>=0;e--){const o=this.confettiParticles[e];o.x+=o.vx*t,o.y+=o.vy*t,o.vy+=150*t,o.life-=t,o.life<=0&&(o.image.destroy(),this.confettiParticles.splice(e,1),this.confettiParticles.length==0&&this.changeLevel())}}destroy(){for(const t of this.confettiParticles)t.image.destroy();this.confettiParticles.length=0}}class _s{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(let i=0;i<this.tilemap.rows;i++)for(let n=0;n<this.tilemap.cols;n++){const l=i*this.tilemap.cols+n,u=this.tilemap.tiles[l];if(!u)continue;const{juiceScaleX:d,juiceScaleY:m}=u.updateJuice(e),w=r.offsetX+n*this.tilemap.tileSize*o,T=a+r.offsetY+i*this.tilemap.tileSize*o;u.updateProperties({position:{x:w,y:T},scale:o,juiceScaleX:d,juiceScaleY:m,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),u.bind(t),u.draw(t)}}}class Es{constructor(t){this.tilemap=t}draw(t){const e=r.deltaTime,o=r.displayWidth/(this.tilemap.cols*this.tilemap.tileSize),a=(r.displayHeight-this.tilemap.rows*this.tilemap.tileSize*o)/2;for(const i of this.tilemap.walls){i.x+=(i.targetX-i.x)*.2,i.y+=(i.targetY-i.y)*.2;const n=r.offsetX+i.x*o,l=a+r.offsetY+i.y*o,{juiceScaleX:u,juiceScaleY:d}=i.image.updateJuice(e);i.image.updateProperties({position:{x:n,y:l},scale:o,juiceScaleX:u,juiceScaleY:d,dt:e,screenScale:r.screenScale??1,offsetX:0,offsetY2:0}),i.image.bind(t),i.image.draw(t)}}}class H{constructor(t,{rows:e=3,cols:o=5,playerPosition:a={row:1,col:0},boxSpots:i=[],doorPosition:n=null,blueBoxSpots:l=[]}){this.gl=t,this.rows=e,this.cols=o,this.tiles=[],this.tileSize=64,this.addTiles(),this.playerRow=a.row,this.playerCol=a.col,this.doorRow=n.row,this.doorCol=n.col,this.touchStart=null,this.touchEnd=null,this.moveCooldown=.2,this.moveTimer=0,this.playerX=this.playerCol*this.tileSize,this.playerY=this.playerRow*this.tileSize,this.dragging=!1,this.dragDirection={row:0,col:0},this.minSwipeDistance=20,this.keysPressed={ArrowUp:!1,ArrowDown:!1,ArrowLeft:!1,ArrowRight:!1,w:!1,a:!1,s:!1,d:!1},this.confetti=new Ys(this),this.reachedDoor=!1,this.boxes=[],this.boxSpots=[],this.blueBoxSpots=[],this.walls=[],this.redWalls=[],this.redButtons=[],this.redWallsOpen=!1;for(const u of i){const d=new N(this.gl,{baseX:1,baseY:7,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:4,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0});this.boxSpots.push({image:d,row:u.row,col:u.col,x:u.col*this.tileSize,y:u.row*this.tileSize})}for(const u of l){const d=new N(this.gl,{baseX:1,baseY:7,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:24,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0});this.boxSpots.push({image:d,row:u.row,col:u.col,x:u.col*this.tileSize,y:u.row*this.tileSize})}this.initInput(),this.tileRenderer=new _s(this),this.wallRenderer=new Es(this),this.redWallRenderer=new Cs(this),this.redButtonRenderer=new As(this),this.playerRenderer=new Ps(this),this.doorRenderer=new Rs(this),this.confettiRenderer=new Bs(this),this.boxRenderer=new Ss(this),this.boxSpotRenderer=new bs(this),this.areBoxesOnSpots()?this.door.uPaletteIndex=4:this.door.uPaletteIndex=500,this.updateBoxColors(),this.restartButton=new N(this.gl,{baseX:0,baseY:11,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,isRestartButton:!0,ui:!0,onClick:u=>{u.isRestartButton&&setTimeout(()=>{const d=`Level${r.currentNumLevel}`,m=Je[d];m?r.changeScene(m):console.warn(`Scene ${d} not found!`)},0)}}),this.levelSelectionButton=new N(this.gl,{baseX:0,baseY:13,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,onClick:()=>{r.changeScene(os)}})}areNormalBoxesOnNormalSpots(){const t=this.boxes.filter(o=>o.image.uPaletteIndex===2);return this.boxSpots.filter(o=>o.image.uPaletteIndex===4).every(o=>t.some(a=>a.row===o.row&&a.col===o.col))}areBlueBoxesOnBlueSpots(){const t=this.boxes.filter(o=>o.image.uPaletteIndex===25);return this.boxSpots.filter(o=>o.image.uPaletteIndex===24).every(o=>t.some(a=>a.row===o.row&&a.col===o.col))}areBoxesOnSpots(){return this.areNormalBoxesOnNormalSpots()&&this.areBlueBoxesOnBlueSpots()}addRedButtons(t=[]){for(const e of t){const a={image:new N(this.gl,{baseX:0,baseY:10,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:5,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0}),row:e.row,col:e.col,x:e.col*this.tileSize,y:e.row*this.tileSize,targetX:e.col*this.tileSize,targetY:e.row*this.tileSize,pressed:!1};this.redButtons.push(a)}}addRedWalls(t=[]){for(const e of t){const a={image:new N(this.gl,{baseX:0,baseY:9,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:5,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!1}),row:e.row,col:e.col,x:e.col*this.tileSize,y:e.row*this.tileSize,targetX:e.col*this.tileSize,targetY:e.row*this.tileSize};this.redWalls.push(a)}}addWalls(t=[]){for(const e of t){const a={image:new N(this.gl,{baseX:0,baseY:9,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:3,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!1}),row:e.row,col:e.col,x:e.col*this.tileSize,y:e.row*this.tileSize,targetX:e.col*this.tileSize,targetY:e.row*this.tileSize};this.walls.push(a)}}addBoxes(t=[{row:1,col:2},{row:2,col:1}]){for(const e of t){const a={image:new N(this.gl,{baseX:0,baseY:8,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:4,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0}),row:e.row,col:e.col,x:e.col*this.tileSize,y:e.row*this.tileSize,targetX:e.col*this.tileSize,targetY:e.row*this.tileSize};this.boxes.push(a)}this.areBoxesOnSpots()?this.door.uPaletteIndex=4:this.door.uPaletteIndex=500,this.updateBoxColors()}addBlueBoxes(t=[{row:1,col:2},{row:2,col:1}]){for(const e of t){const a={image:new N(this.gl,{baseX:0,baseY:8,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:24,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0}),row:e.row,col:e.col,x:e.col*this.tileSize,y:e.row*this.tileSize,targetX:e.col*this.tileSize,targetY:e.row*this.tileSize};this.boxes.push(a)}this.areBoxesOnSpots()?this.door.uPaletteIndex=4:this.door.uPaletteIndex=500,this.updateBoxColors()}updateBoxColors(){for(const t of this.boxes){const e=t.image.uPaletteIndex===4||t.image.uPaletteIndex===2,o=t.image.uPaletteIndex===24||t.image.uPaletteIndex===25;if(e){const a=this.boxSpots.some(i=>i.row===t.row&&i.col===t.col&&i.image.uPaletteIndex===4);t.image.uPaletteIndex=a?2:4}if(o){const a=this.boxSpots.some(i=>i.row===t.row&&i.col===t.col&&i.image.uPaletteIndex===24);t.image.uPaletteIndex=a?25:24}}}isButtonPressed(t){return!!(t.row===this.playerRow&&t.col===this.playerCol||this.boxes.some(e=>e.row===t.row&&e.col===t.col))}movePlayer(t,e){if(this.reachedDoor)return;const o=this.playerRow+t,a=this.playerCol+e;if(o<0||o>=this.rows||a<0||a>=this.cols||this.getWallAt(o,a))return;const i=this.getBoxAt(o,a);if(i){const l=i.row+t,u=i.col+e;if(l<0||l>=this.rows||u<0||u>=this.cols||this.getBoxAt(l,u)||this.getWallAt(l,u))return;const d=i.image.uPaletteIndex===4||i.image.uPaletteIndex===2,m=i.image.uPaletteIndex===24||i.image.uPaletteIndex===25,w=this.boxSpots.some(g=>g.row===l&&g.col===u&&g.image.uPaletteIndex===4),T=this.boxSpots.some(g=>g.row===l&&g.col===u&&g.image.uPaletteIndex===24),f=d&&w||m&&T;i.row=l,i.col=u,i.targetX=u*this.tileSize,i.targetY=l*this.tileSize,f&&F.playSound("touch")}this.updateBoxColors(),this.playerRow=o,this.playerCol=a,F.playSound("move"),o===this.doorRow&&a===this.doorCol&&!this.reachedDoor&&this.areBoxesOnSpots()&&(F.playSound("touch"),this.reachedDoor=!0,this.removeEventListeners(),this.confetti.spawnConfetti()),this.areBoxesOnSpots()?this.door.uPaletteIndex=4:this.door.uPaletteIndex=500;let n=!1;for(const l of this.redButtons){const u=this.isButtonPressed(l);u&&!l.pressed?(l.pressed=!0,n=!0):!u&&l.pressed&&(l.pressed=!1),l.pressed&&(n=!0)}n&&!this.redWallsOpen?(this.toggleRedWalls(!0),F.playSound("touch")):!n&&this.redWallsOpen&&(this.toggleRedWalls(!1),F.playSound("touch"))}toggleRedWalls(t){if(this.redWallsOpen=t,this.redWallsOpen)for(const e of this.redWalls)e.image.uPaletteIndex=500;else for(const e of this.redWalls)e.image.uPaletteIndex=5}initInput(){this._onTouchStart=t=>{const e=t.touches[0];this.touchStart={x:e.clientX,y:e.clientY},this.dragging=!0,this.dragDirection={row:0,col:0}},this._onTouchMove=t=>{if(!this.dragging||!this.touchStart)return;const e=t.touches[0],o=e.clientX-this.touchStart.x,a=e.clientY-this.touchStart.y;if(Math.sqrt(o*o+a*a)<this.minSwipeDistance){this.dragDirection={row:0,col:0};return}Math.abs(o)>Math.abs(a)?this.dragDirection={row:0,col:o>0?1:-1}:this.dragDirection={row:a>0?1:-1,col:0}},this._onTouchEnd=()=>{this.dragging=!1,this.dragDirection={row:0,col:0}},this._onMouseDown=t=>{this.dragging=!0,this.touchPrev={x:t.clientX,y:t.clientY},this.touchStart={x:t.clientX,y:t.clientY}},this._onMouseMove=t=>{if(!this.dragging||!this.touchPrev||!this.touchStart)return;const e=t.clientX-this.touchPrev.x,o=t.clientY-this.touchPrev.y,a=t.clientX-this.touchStart.x,i=t.clientY-this.touchStart.y;if(Math.sqrt(a*a+i*i)<this.minSwipeDistance){this.dragDirection={row:0,col:0};return}Math.abs(e)>Math.abs(o)?this.dragDirection={row:0,col:e>0?1:-1}:this.dragDirection={row:o>0?1:-1,col:0},this.touchPrev={x:t.clientX,y:t.clientY}},this._onMouseUp=()=>{this.dragging=!1,this.dragDirection={row:0,col:0}},this._onKeyDown=t=>{if(t.key in this.keysPressed&&(this.keysPressed[t.key]=!0),(t.key==="r"||t.key==="R")&&!r.rPressed){r.rPressed=!0,F.playSound("touch");const e=`Level${r.currentNumLevel}`,o=Je[e];o?r.changeScene(o):console.warn(`Scene ${e} not found!`)}},this._onKeyUp=t=>{t.key in this.keysPressed&&(this.keysPressed[t.key]=!1),(t.key==="r"||t.key==="R")&&(r.rPressed=!1)},window.addEventListener("touchstart",this._onTouchStart),window.addEventListener("touchmove",this._onTouchMove),window.addEventListener("touchend",this._onTouchEnd),window.addEventListener("mousedown",this._onMouseDown),window.addEventListener("mousemove",this._onMouseMove),window.addEventListener("mouseup",this._onMouseUp),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp)}addTiles(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.cols;e++){const o=new Dt(this.gl,{shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:22,tilemap:this,tileSize:8,width:this.tileSize,height:this.tileSize,updateJuice:!1});this.tiles.push(o)}this.player=new N(this.gl,{baseX:0,baseY:5,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:7,regionWidth:2,regionHeight:2,width:this.tileSize,height:this.tileSize,tilemap:this,updateJuice:!0}),this.door=new N(this.gl,{baseX:0,baseY:7,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,tilemap:this,updateJuice:!0})}update(){const t=r.deltaTime;this.moveTimer-=t;let e=0,o=0;this.keysPressed.ArrowLeft||this.keysPressed.a?o=-1:this.keysPressed.ArrowRight||this.keysPressed.d?o=1:this.keysPressed.ArrowUp||this.keysPressed.w?e=-1:(this.keysPressed.ArrowDown||this.keysPressed.s)&&(e=1),o===0&&e===0&&(this.dragDirection.col!==0?o=this.dragDirection.col:this.dragDirection.row!==0&&(e=this.dragDirection.row)),(e!==0||o!==0)&&this.moveTimer<=0&&(this.movePlayer(e,o),this.moveTimer=this.moveCooldown);const a=this.playerCol*this.tileSize,i=this.playerRow*this.tileSize,n=.2;this.playerX+=(a-this.playerX)*n,this.playerY+=(i-this.playerY)*n,this.confetti.update()}getBoxAt(t,e){return this.boxes.find(o=>o.row===t&&o.col===e)}getWallAt(t,e){return!!(this.walls.find(o=>o.row===t&&o.col===e)||!this.redWallsOpen&&this.redWalls.find(o=>o.row===t&&o.col===e))}draw(t){this.update();const e=r.deltaTime,o=r.scale,a=r.offsetX,i=r.offsetY;$(t,720-this.restartButton.width*2,0,e,this.restartButton,o*2,a,i,o),$(t,720-this.levelSelectionButton.width*4,0,e,this.levelSelectionButton,o*2,a,i,o),this.tileRenderer.draw(t),this.playerRenderer.draw(t),this.wallRenderer.draw(t),this.redWallsOpen||this.redWallRenderer.draw(t),this.doorRenderer.draw(t),this.confettiRenderer.draw(t),this.boxRenderer.draw(t),this.boxSpotRenderer.draw(t),this.redButtonRenderer.draw(t)}removeEventListeners(){window.removeEventListener("touchstart",this._onTouchStart),window.removeEventListener("touchmove",this._onTouchMove),window.removeEventListener("touchend",this._onTouchEnd),window.removeEventListener("mousedown",this._onMouseDown),window.removeEventListener("mousemove",this._onMouseMove),window.removeEventListener("mouseup",this._onMouseUp),window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp)}destroy(){var t,e,o,a,i,n,l,u,d,m;this.removeEventListeners(),this.tiles.forEach(w=>{var T;return(T=w.destroy)==null?void 0:T.call(w)}),this.tiles.length=0,this.boxes.forEach(w=>{var T,f;return(f=(T=w.image).destroy)==null?void 0:f.call(T)}),this.boxes.length=0,this.boxSpots.forEach(w=>{var T,f;return(f=(T=w.image).destroy)==null?void 0:f.call(T)}),this.walls.forEach(w=>{var T,f;return(f=(T=w.image).destroy)==null?void 0:f.call(T)}),this.redWalls.forEach(w=>{var T,f;return(f=(T=w.image).destroy)==null?void 0:f.call(T)}),this.redButtons.forEach(w=>{var T,f;return(f=(T=w.image).destroy)==null?void 0:f.call(T)}),(e=(t=this.player)==null?void 0:t.destroy)==null||e.call(t),(a=(o=this.door)==null?void 0:o.destroy)==null||a.call(o),(n=(i=this.confetti)==null?void 0:i.destroy)==null||n.call(i),(u=(l=this.restartButton)==null?void 0:l.destroy)==null||u.call(l),(m=(d=this.levelSelectionButton)==null?void 0:d.destroy)==null||m.call(d),this.gl=null,this.dragging=!1,this.touchStart=null,this.touchPrev=null,this.dragDirection={row:0,col:0},this._sceneTimeout&&(clearTimeout(this._sceneTimeout),this._sceneTimeout=null),delete this}}class Ms extends r{constructor(t){super(t),r.currentNumLevel=1,this._time=0}async init(){const t=r.gl,e=new H(t,{cols:6,rows:3,playerPosition:{row:1,col:1},doorPosition:{row:1,col:4}}),o=new N(t,{baseX:2,baseY:5,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,updateJuice:!0,regionHeight:2,regionWidth:2}),a=new Xt(t,{text:"Swipe to move Cubee",shader:x.shader,tilesTexture:x.textureAtlas,updateJuice:!0});r.state={handCursor:o,swipeTutorial:a,tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl,o=r.state,{handCursor:a,swipeTutorial:i,tilemap:n}=o;this._time+=r.deltaTime*10;const l=40*r.scale,u=Math.sin(this._time)*l;n.draw(e),$(e,u,0,r.deltaTime,a,r.scale*15,r.offsetX+300*r.scale,r.offsetY+950*r.scale,r.scale),$(e,0,0,r.deltaTime,i,r.scale*4,r.offsetX+60*r.scale,r.offsetY+900*r.scale,r.scale)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap,t.handCursor.destroy(),delete t.handCursor,t.swipeTutorial.destroy(),delete t.swipeTutorial}}class Xs extends r{constructor(t){super(t),r.currentNumLevel=10}async init(){const t=r.gl,e=new H(t,{cols:7,rows:5,playerPosition:{row:4,col:1},boxSpots:[{row:1,col:5},{row:3,col:0}],doorPosition:{row:0,col:5}});e.addBoxes([{row:3,col:2},{row:2,col:3},{row:2,col:5}]),e.addWalls([{row:1,col:2},{row:3,col:3}]),e.addRedWalls([{row:1,col:4},{row:2,col:4}]),e.addRedButtons([{row:4,col:4}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Is extends r{constructor(t){super(t),r.currentNumLevel=11}async init(){const t=r.gl,e=new H(t,{cols:7,rows:6,playerPosition:{row:5,col:1},boxSpots:[{row:2,col:5},{row:3,col:3}],doorPosition:{row:1,col:6}});e.addBoxes([{row:4,col:2},{row:4,col:5}]),e.addWalls([{row:0,col:0},{row:0,col:1},{row:0,col:2},{row:0,col:3},{row:0,col:6},{row:1,col:0},{row:2,col:0},{row:3,col:0},{row:4,col:0},{row:5,col:0},{row:5,col:6},{row:4,col:6},{row:3,col:6},{row:2,col:6},{row:1,col:1},{row:2,col:1},{row:3,col:1}]),e.addRedWalls([{row:3,col:4},{row:4,col:4},{row:5,col:4},{row:2,col:2},{row:2,col:3}]),e.addRedButtons([{row:5,col:3}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class zs extends r{constructor(t){super(t),r.currentNumLevel=12}async init(){const t=r.gl,e=new H(t,{cols:5,rows:3,playerPosition:{row:1,col:0},boxSpots:[{row:2,col:0}],doorPosition:{row:1,col:4},blueBoxSpots:[{row:2,col:2}]});e.addBoxes([{row:2,col:1}]),e.addBlueBoxes([{row:2,col:3}]),e.addWalls([]),e.addRedWalls([]),e.addRedButtons([]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Ls extends r{constructor(t){super(t),r.currentNumLevel=13}async init(){const t=r.gl,e=new H(t,{cols:6,rows:4,playerPosition:{row:2,col:0},boxSpots:[{row:3,col:0},{row:0,col:5}],doorPosition:{row:1,col:5},blueBoxSpots:[{row:3,col:3},{row:0,col:2}]});e.addBoxes([{row:1,col:0},{row:2,col:4}]),e.addBlueBoxes([{row:3,col:2},{row:0,col:4}]),e.addWalls([{row:1,col:2},{row:2,col:2},{row:2,col:3}]),e.addRedWalls([{row:0,col:1}]),e.addRedButtons([{row:1,col:1}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Fs extends r{constructor(t){super(t),r.currentNumLevel=14}async init(){const t=r.gl,e=new H(t,{cols:6,rows:5,playerPosition:{row:4,col:0},boxSpots:[{row:1,col:5},{row:4,col:5}],doorPosition:{row:0,col:5},blueBoxSpots:[{row:2,col:2},{row:0,col:1}]});e.addBoxes([{row:4,col:1},{row:3,col:3}]),e.addBlueBoxes([{row:3,col:2},{row:2,col:4}]),e.addWalls([{row:3,col:1},{row:2,col:1},{row:1,col:3},{row:2,col:3}]),e.addRedWalls([{row:1,col:2},{row:0,col:3}]),e.addRedButtons([{row:4,col:2}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Ds extends r{constructor(t){super(t),r.currentNumLevel=15}async init(){const t=r.gl,e=new H(t,{cols:7,rows:5,playerPosition:{row:4,col:0},boxSpots:[{row:0,col:6},{row:4,col:0}],doorPosition:{row:0,col:5},blueBoxSpots:[{row:0,col:0},{row:3,col:3}]});e.addBoxes([{row:4,col:1},{row:3,col:6}]),e.addBlueBoxes([{row:0,col:1},{row:3,col:4}]),e.addWalls([{row:3,col:1},{row:2,col:1},{row:1,col:3},{row:2,col:2},{row:2,col:4}]),e.addRedWalls([{row:1,col:2},{row:0,col:3},{row:1,col:6}]),e.addRedButtons([{row:4,col:2},{row:3,col:5}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Ws extends r{constructor(t){super(t),r.currentNumLevel=16}async init(){const t=r.gl,e=new H(t,{cols:8,rows:8,playerPosition:{row:4,col:0},boxSpots:[{row:0,col:0},{row:1,col:0},{row:2,col:0}],doorPosition:{row:3,col:4},blueBoxSpots:[{row:0,col:7},{row:1,col:7},{row:2,col:7}]});e.addBoxes([{row:6,col:1},{row:6,col:2},{row:6,col:3}]),e.addBlueBoxes([{row:6,col:4},{row:6,col:5},{row:6,col:6}]),e.addWalls([{row:3,col:0},{row:3,col:2},{row:2,col:3},{row:1,col:3},{row:0,col:3},{row:3,col:5},{row:3,col:7},{row:2,col:4},{row:1,col:4},{row:0,col:4}]),e.addRedWalls([]),e.addRedButtons([]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Us extends r{constructor(t){super(t),r.currentNumLevel=17}async init(){const t=r.gl,e=new H(t,{cols:9,rows:9,playerPosition:{row:8,col:4},boxSpots:[{row:1,col:1},{row:2,col:1},{row:3,col:1}],blueBoxSpots:[{row:1,col:7},{row:2,col:7},{row:3,col:7}],doorPosition:{row:0,col:4}});e.addBoxes([{row:6,col:2},{row:6,col:3},{row:7,col:2}]),e.addBlueBoxes([{row:6,col:5},{row:6,col:6},{row:7,col:6}]),e.addWalls([{row:0,col:0},{row:0,col:8},{row:8,col:0},{row:8,col:8},{row:4,col:0},{row:4,col:8},{row:2,col:4},{row:5,col:4},{row:7,col:4},{row:2,col:2},{row:2,col:3},{row:4,col:2},{row:5,col:2},{row:2,col:5},{row:2,col:6},{row:4,col:6},{row:5,col:6}]),e.addRedWalls([{row:3,col:2},{row:3,col:6},{row:6,col:4}]),e.addRedButtons([{row:7,col:1},{row:7,col:7}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class ks extends r{constructor(t){super(t),r.currentNumLevel=18}async init(){const t=r.gl,e=new H(t,{cols:9,rows:9,playerPosition:{row:8,col:2},boxSpots:[{row:7,col:0},{row:6,col:0},{row:5,col:0}],blueBoxSpots:[{row:1,col:8},{row:2,col:8},{row:3,col:8}],doorPosition:{row:0,col:0}});e.addBoxes([{row:2,col:5},{row:3,col:6},{row:4,col:7}]),e.addBlueBoxes([{row:5,col:2},{row:6,col:3},{row:7,col:4}]),e.addWalls([{row:0,col:8},{row:8,col:8},{row:8,col:0},{row:1,col:4},{row:2,col:4},{row:3,col:4},{row:5,col:4},{row:6,col:4},{row:4,col:1},{row:6,col:1},{row:3,col:7},{row:5,col:6},{row:6,col:7}]),e.addRedWalls([{row:4,col:3},{row:4,col:5},{row:5,col:5},{row:6,col:5}]),e.addRedButtons([{row:8,col:3},{row:1,col:2},{row:7,col:7}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Ns extends r{constructor(t){super(t),r.currentNumLevel=19}async init(){const t=r.gl,e=new H(t,{cols:9,rows:9,playerPosition:{row:8,col:4},boxSpots:[{row:1,col:1},{row:1,col:2},{row:2,col:1}],blueBoxSpots:[{row:1,col:7},{row:2,col:7},{row:3,col:7}],doorPosition:{row:0,col:4}});e.addBoxes([{row:6,col:2},{row:7,col:3},{row:6,col:3}]),e.addBlueBoxes([{row:6,col:6},{row:7,col:5},{row:7,col:6}]),e.addWalls([{row:0,col:0},{row:0,col:8},{row:8,col:0},{row:8,col:8},{row:4,col:0},{row:4,col:1},{row:4,col:2},{row:4,col:6},{row:4,col:7},{row:4,col:8},{row:2,col:4},{row:3,col:4},{row:5,col:4},{row:6,col:4}]),e.addRedWalls([{row:4,col:3},{row:5,col:5}]),e.addRedButtons([{row:7,col:1},{row:2,col:5}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t),r.state.tilemap.draw(r.gl)}destroy(){const{tilemap:t}=r.state;t.destroy(),delete r.state.tilemap}}class Hs extends r{constructor(t){super(t),r.currentNumLevel=2}async init(){const t=r.gl,e=new H(t,{cols:7,rows:5,playerPosition:{row:2,col:0},doorPosition:{row:4,col:6},boxSpots:[{row:0,col:2},{row:2,col:1}]});e.addBoxes([{row:2,col:2},{row:1,col:3}]);const o=new Xt(t,{text:"Move the boxes to",shader:x.shader,tilesTexture:x.textureAtlas,updateJuice:!0}),a=new Xt(t,{text:"the marked spots.",shader:x.shader,tilesTexture:x.textureAtlas,updateJuice:!0});r.state={tilemap:e,tutorial:o,tutorial2:a,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl,o=r.state;o.tilemap.draw(e),$(e,0,0,r.deltaTime,o.tutorial,r.scale*4,r.offsetX+90*r.scale,r.offsetY+950*r.scale,r.scale),$(e,0,0,r.deltaTime,o.tutorial2,r.scale*4,r.offsetX+90*r.scale,r.offsetY+1e3*r.scale,r.scale)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap,t.tutorial.destroy(),delete t.tutorial,t.tutorial2.destroy(),delete t.tutorial2}}class Js extends r{constructor(t){super(t),r.currentNumLevel=20}async init(){const t=r.gl,e=new H(t,{cols:9,rows:9,playerPosition:{row:8,col:1},boxSpots:[{row:1,col:6},{row:1,col:7},{row:2,col:6}],blueBoxSpots:[{row:6,col:7},{row:7,col:7},{row:7,col:6}],doorPosition:{row:0,col:4}});e.addBoxes([{row:4,col:2},{row:5,col:2},{row:5,col:3}]),e.addBlueBoxes([{row:5,col:5},{row:6,col:5},{row:1,col:5}]),e.addWalls([{row:0,col:0},{row:0,col:8},{row:8,col:0},{row:8,col:8},{row:2,col:4},{row:3,col:4},{row:4,col:4},{row:6,col:4},{row:7,col:4},{row:3,col:6},{row:4,col:6},{row:6,col:2}]),e.addRedWalls([{row:1,col:4},{row:2,col:5},{row:3,col:5}]),e.addRedButtons([{row:7,col:2},{row:6,col:6}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t),r.state.tilemap.draw(r.gl)}destroy(){const{tilemap:t}=r.state;t.destroy(),delete r.state.tilemap}}class Os extends r{constructor(t){super(t),r.currentNumLevel=3}async init(){const t=r.gl,e=new H(t,{cols:7,rows:6,playerPosition:{row:1,col:1},doorPosition:{row:4,col:6},boxSpots:[{row:1,col:5},{row:3,col:4},{row:4,col:5}]});e.addBoxes([{row:1,col:3},{row:2,col:4},{row:3,col:2}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Vs extends r{constructor(t){super(t),r.currentNumLevel=4}async init(){const t=r.gl,e=new H(t,{cols:7,rows:6,playerPosition:{row:1,col:1},boxSpots:[{row:1,col:5},{row:3,col:4},{row:4,col:5}],doorPosition:{row:3,col:6}});e.addBoxes([{row:1,col:3},{row:2,col:4},{row:3,col:2}]),e.addWalls([{row:0,col:0},{row:0,col:1},{row:0,col:2},{row:0,col:3},{row:0,col:4},{row:0,col:5},{row:0,col:6},{row:5,col:0},{row:5,col:1},{row:5,col:2},{row:5,col:3},{row:5,col:4},{row:5,col:5},{row:5,col:6},{row:1,col:0},{row:2,col:0},{row:3,col:0},{row:4,col:0},{row:1,col:6},{row:2,col:6},{row:4,col:6},{row:2,col:2}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class js extends r{constructor(t){super(t),r.currentNumLevel=5}async init(){const t=r.gl,e=new H(t,{cols:5,rows:3,playerPosition:{row:1,col:1},boxSpots:[{row:0,col:0},{row:0,col:4},{row:2,col:0}],doorPosition:{row:1,col:4}});e.addBoxes([{row:0,col:1},{row:1,col:2},{row:2,col:1}]),e.addWalls([]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Gs extends r{constructor(t){super(t),r.currentNumLevel=6}async init(){const t=r.gl,e=new H(t,{cols:6,rows:4,playerPosition:{row:3,col:1},boxSpots:[{row:0,col:1},{row:0,col:4},{row:3,col:3},{row:3,col:5}],doorPosition:{row:0,col:5}});e.addBoxes([{row:2,col:1},{row:3,col:2},{row:2,col:3},{row:2,col:4}]),e.addWalls([{row:0,col:0},{row:0,col:2},{row:0,col:3},{row:3,col:0},{row:1,col:0},{row:2,col:0},{row:1,col:2},{row:2,col:2}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class Ks extends r{constructor(t){super(t),r.currentNumLevel=7}async init(){const t=r.gl,e=new H(t,{cols:6,rows:5,playerPosition:{row:4,col:1},boxSpots:[{row:3,col:3},{row:4,col:5},{row:1,col:1}],doorPosition:{row:0,col:5}});e.addBoxes([{row:3,col:2},{row:3,col:3},{row:4,col:3}]),e.addWalls([{row:0,col:0},{row:0,col:1},{row:0,col:3},{row:4,col:0},{row:1,col:0},{row:2,col:0},{row:3,col:0},{row:2,col:2},{row:3,col:4}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class qs extends r{constructor(t){super(t),r.currentNumLevel=8}async init(){const t=r.gl,e=new H(t,{cols:6,rows:5,playerPosition:{row:4,col:1},boxSpots:[{row:1,col:4}],doorPosition:{row:3,col:5}});e.addBoxes([{row:4,col:2},{row:1,col:2}]),e.addWalls([{row:0,col:0},{row:0,col:1},{row:0,col:2},{row:1,col:0},{row:2,col:0},{row:4,col:0},{row:4,col:5},{row:2,col:2},{row:2,col:4},{row:3,col:4}]),e.addRedWalls([{row:1,col:3}]),e.addRedButtons([{row:4,col:4}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}class $s extends r{constructor(t){super(t),r.currentNumLevel=9}async init(){const t=r.gl,e=new H(t,{cols:6,rows:5,playerPosition:{row:4,col:0},boxSpots:[{row:3,col:5},{row:4,col:0}],doorPosition:{row:0,col:4}});e.addBoxes([{row:3,col:2},{row:4,col:3}]),e.addWalls([{row:2,col:2},{row:1,col:1}]),e.addRedWalls([{row:2,col:4},{row:3,col:4},{row:2,col:3}]),e.addRedButtons([{row:4,col:4}]),r.state={tilemap:e,...r.state}}drawLoop(t){super.drawLoop(t);const e=r.gl;r.state.tilemap.draw(e)}destroy(){const t=r.state;t.tilemap.destroy(),delete t.tilemap}}const Je={Level1:Ms,Level2:Hs,Level3:Os,Level4:Vs,Level5:js,Level6:Gs,Level7:Ks,Level8:qs,Level9:$s,Level10:Xs,Level11:Is,Level12:zs,Level13:Ls,Level14:Fs,Level15:Ds,Level16:Ws,Level17:Us,Level18:ks,Level19:Ns,Level20:Js};class os extends r{constructor(t){super(t)}async init(){const t=r.gl,e=x.shader;let o=parseInt(localStorage.getItem("cubee_levels"))||1;const a=[];for(let i=1;i<=20;i++){const n=i<=o,l=new Xt(t,{text:`${i}`,shader:e,tilesTexture:x.textureAtlas,canDestroy:n,hud:n}),u=new Dt(t,{baseX:0,baseY:0,shader:e,tilesTexture:x.textureAtlas,width:40,height:32,paletteTexture:x.paletteTexture,uPaletteIndex:n?1:0,canDestroy:n,hud:n,onClick:()=>{if(!n)return;const d=`Level${i}`,m=Je[d];m?r.changeScene(m):console.warn(`Scene ${d} not found!`)}});a.push({text:l,button:u})}this.tileSize=64,this.goToMainMenuButton=new N(t,{baseX:0,baseY:15,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,onClick:()=>{r.changeScene(qe)}}),r.state={levelButtons:a,...r.state}}drawLoop(t){const e=r.gl,o=r.deltaTime,a=r.state;let i=a.commaKey;const{scale:n,displayWidth:l,displayHeight:u,offsetX:d,offsetY:m}=a.viewport.draw(i);r.drawPixelEditor(i);const w=5,T=a.levelButtons[0].button.width*n*3,f=a.levelButtons[0].button.height*n*3,g=20*n,v=20*n,S=d-40*n,Y=m+300*n;a.levelButtons.forEach((R,E)=>{if(!R.text||!R.text.imageRenderer)return;const b=Math.floor(E/w),P=E%w,D=S+P*(T+g)+T/2,X=Y+b*(f+v)+f/2;let B=R.text.imageRenderer.vertexCount/6;const A=R.text.tileSize||8,J=B*A,j=A*3;let G=R.button.width*B;B>1&&(G=J);const lt=[{gl:e,x:G,y:j,deltaTime:o,image:R.text,scaleImage:n*6,scale:n}];$(e,0,0,o,R.button,n*3,D,X,n,!0,lt)}),$(e,720/2-this.goToMainMenuButton.width,150,o,this.goToMainMenuButton,n*2,d,m,n)}destroy(){var e,o;const t=r.state;t.levelButtons.forEach((a,i)=>{a.button.destroy(),a.text.destroy(),delete a.button,delete a.text}),delete t.levelButtons,(o=(e=this.goToMainMenuButton)==null?void 0:e.destroy)==null||o.call(e)}}class qe extends r{constructor(t){super(t),this._onGlobalClick=null}async init(){r.state.clickCounter=0,r.state.dontTriggerAuthorButton=!1,r.state.showPlayButton=!0;const t=r.gl,e=x.shader,o=new Xt(t,{text:"Play",shader:e,tilesTexture:x.textureAtlas}),a=new Dt(t,{baseX:0,baseY:0,shader:e,tilesTexture:x.textureAtlas,width:110,height:32,paletteTexture:x.paletteTexture,uPaletteIndex:1,onClick:()=>{r.state.dontTriggerPlay||setTimeout(()=>{r.changeScene(os)},0)}}),i=new Dt(t,{baseX:0,baseY:0,shader:e,tilesTexture:x.textureAtlas,width:200,height:40,paletteTexture:x.paletteTexture,uPaletteIndex:1}),n=new Xt(t,{text:"Developed By:",shader:e,tilesTexture:x.textureAtlas,updateJuice:!1}),l=new Xt(t,{text:"SchaukoskiEntertainment",shader:e,tilesTexture:x.textureAtlas,updateJuice:!1}),u=new Xt(t,{text:"!",shader:e,tilesTexture:x.textureAtlas}),d=new Dt(t,{baseX:0,baseY:0,shader:e,tilesTexture:x.textureAtlas,width:50,height:40,paletteTexture:x.paletteTexture,uPaletteIndex:1,onClick:()=>{this.openDevelopedBy()}}),m=new N(t,{baseX:0,baseY:2,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:7,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:6,isRestartButton:!0,ui:!0,width:24});this.tileSize=64,this.musicButton=new N(t,{baseX:0,baseY:17,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,isRestartButton:!0,ui:!0,onClick:w=>{r.music=!r.music,r.music?F.setGlobalMusicVolume(1):F.setGlobalMusicVolume(0)}}),this.audioButton=new N(t,{baseX:0,baseY:19,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:500,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,onClick:()=>{r.sound=!r.sound,r.sound?F.setGlobalSoundVolume(1):F.setGlobalSoundVolume(0)}}),this.blockedImage=new N(t,{baseX:0,baseY:21,shader:x.shader,tilesTexture:x.textureAtlas,paletteTexture:x.paletteTexture,uPaletteIndex:23,width:this.tileSize,height:this.tileSize,tileSize:8,updateJuice:!0,regionHeight:2,regionWidth:2,isRestartButton:!0,ui:!0}),r.state={logo:m,playButtonText:o,playButton:a,authorButton:d,authorButtonText:u,developedByNineslice:i,developedByText1:n,developedByText:l,showDevelopedBy:!1,...r.state},this.openDevelopedBy=()=>{r.state.dontTriggerAuthorButton||(r.state.showDevelopedBy=!r.state.showDevelopedBy,r.state.showPlayButton=!r.state.showPlayButton,r.state.clickCounter=0),document.addEventListener("pointerdown",this._onGlobalClick)},this._onGlobalClick=()=>{r.state.clickCounter%2!=0&&r.state.clickCounter>1&&(r.state.showDevelopedBy||(r.state.dontTriggerAuthorButton=!0)),r.state.showDevelopedBy?r.state.dontTriggerPlay=!0:r.state.dontTriggerPlay=!1,r.state.showDevelopedBy&&F.playSound("touch"),r.state.clickCounter++,r.state.showDevelopedBy=!1,r.state.showPlayButton=!0,r.state.dontTriggerAuthorButton=!r.state.dontTriggerAuthorButton,r.state.clickCounter%2!=0&&r.state.clickCounter>1&&(r.state.dontTriggerAuthorButton=!1)}}drawLoop(t){const e=r.gl,o=r.deltaTime,a=r.state,{scale:i,displayWidth:n,displayHeight:l,offsetX:u,offsetY:d}=a.viewport.draw(a.commaKey);r.drawPixelEditor(a.commaKey);const{centerX:m,centerY:w}=r.getCenterOfViewport(e,a.playButton,i*3,n,l,u,d),T=a.playButton.width*i*3,f=a.playButton.height*i*3,g=a.playButtonText.imageRenderer.vertexCount/6,v=a.playButtonText.tileSize||8,S=g*v*i*6,Y=v*i*6,R=(T-S)/2/i,E=(f-Y)/2/i,b=[{gl:e,x:R,y:E,deltaTime:o,image:a.playButtonText,scaleImage:i*6,scale:i}],P=r.state.showPlayButton;$(e,0,0,o,a.playButton,i*3,m,w,i,P,b);{const X=[{gl:e,x:48,y:25,deltaTime:o,image:a.authorButtonText,scaleImage:i*8,scale:i}];$(e,710-a.authorButton.width*3,1270-a.authorButton.height*3,o,a.authorButton,i*3,u,d,i,!0,X)}if(a.showDevelopedBy){const X=[{gl:e,x:20,y:28,deltaTime:o,image:a.developedByText1,scaleImage:i*3,scale:i},{gl:e,x:20,y:67,deltaTime:o,image:a.developedByText,scaleImage:i*3,scale:i}],{centerX:B,centerY:A}=r.getCenterOfViewport(e,a.developedByNineslice,i*3,n,l,u,d);$(e,0,0,o,a.developedByNineslice,i*3,B,A,i,!0,X)}const D=[{gl:e,x:0,y:0,deltaTime:o,image:this.blockedImage,scaleImage:i*2,scale:i}];$(e,720-this.musicButton.width*2,0,o,this.musicButton,i*2,u,d,i,!0,D,!r.music),$(e,720-this.audioButton.width*4,0,o,this.audioButton,i*2,u,d,i,!0,D,!r.sound),$(e,0,0,o,a.logo,i*20,u+120*i,d+400*i,i)}destroy(){var e,o,a,i,n,l;const t=r.state;this._onGlobalClick&&(document.removeEventListener("pointerdown",this._onGlobalClick),this._onGlobalClick=null),t.playButton.destroy(),t.playButtonText.destroy(),t.authorButton.destroy(),t.authorButtonText.destroy(),t.developedByNineslice.destroy(),t.developedByText.destroy(),t.developedByText1.destroy(),t.logo.destroy(),(o=(e=this.musicButton)==null?void 0:e.destroy)==null||o.call(e),(i=(a=this.audioButton)==null?void 0:a.destroy)==null||i.call(a),(l=(n=this.blockedImage)==null?void 0:n.destroy)==null||l.call(n),t.showDevelopedBy=!1,delete t.playButton,delete t.playButtonText,delete t.authorButton,delete t.authorButtonText,delete t.developedByNineslice,delete t.developedByText,delete t.developedByText1,delete t.logo}}async function Qs(h){return(await(await fetch("palettes/palettes.json")).json()).map(a=>({from:a.from.map(i=>Qe(i)),to:a.to.map(i=>Qe(i))}))}const Q=class Q extends r{constructor(t){super(t),this.displayProgress=0}async init(){let t=0;const e=6,o=v=>{t++,this.progress=t/e},a=r.gl;Q.textureAtlas||(Q.textureAtlas=new ls(a,"tiles.png")),await Q.textureAtlas.ready(),o();const i=await Qs(),n=as(a,i,8);Q.paletteTexture=n;const l=new ns(a,n,i.length*2);Q.shader=l;const u=new vs(a,l,Q.textureAtlas,n,i,()=>Q.paletteTexture),d=new Ts(a,L,720,1280),m=new N(a,{baseX:0,baseY:0,shader:l,tilesTexture:Q.textureAtlas,width:100,height:8,paletteTexture:n,uPaletteIndex:0}),w=new Dt(a,{baseX:0,baseY:0,shader:l,tilesTexture:Q.textureAtlas,width:110,height:16,paletteTexture:n,uPaletteIndex:1}),T=new N(a,{baseX:0,baseY:5,shader:l,tilesTexture:Q.textureAtlas,regionWidth:2,regionHeight:2,paletteTexture:n,uPaletteIndex:7}),f=new Xt(a,{text:"100%",shader:l,tilesTexture:Q.textureAtlas});r.state={thumbnail:T,viewport:d,loadingBar:m,pixelEditor:u,loadingBarOutline:w,loadingPercentage:f,commaKey:!1},o();const g=()=>{F.isPlaying("cubeechiptune")||F.playMusic("cubeechiptune")};F.loadMusic("cubeechiptune","music/cubeechiptune.mp3").then(()=>{o(),document.addEventListener("pointerdown",g)}),F.loadSound("touch","sounds/touch.ogg").then(()=>{o()}),F.loadSound("move","sounds/move.ogg").then(()=>{o()}),F.loadSound("winlevel","sounds/winlevel.wav").then(()=>{o()}),F.setGlobalMusicVolume(.8)}lerp(t,e,o){return t+(e-t)*o}drawLoop(t){const e=r.gl,o=r.deltaTime,a=r.state;let i=a.commaKey;const{scale:n,displayWidth:l,displayHeight:u,offsetX:d,offsetY:m}=a.viewport.draw(i);r.drawPixelEditor(i);const w=1.2*o;this.displayProgress=this.lerp(this.displayProgress,this.progress,w);const T=100*this.displayProgress;a.loadingBar.setWidth(T),this.displayProgress>=.92&&a.loadingBar.setWidth(100);const f=a.loadingBar.width*n*5,g=a.loadingBar.height*n*5,S=(a.loadingBarOutline.width-a.loadingBar.width)*n*5/2,Y=d+(l/2-f/2)-S,R=m+(u/2-g/2),{centerX:E,centerY:b}=r.getCenterOfViewport(e,a.thumbnail,n*17,l,u,d,m),P=[{gl:e,x:25,y:20,deltaTime:o,image:a.loadingBar,scaleImage:n*5,scale:n}];$(e,0,0,o,a.loadingBarOutline,n*5,Y,R,n,!0,P),$(e,0,0,o,a.thumbnail,n*17,E,b-150*n,n);{const{centerX:D,centerY:X}=r.getCenterOfViewport(e,a.loadingPercentage,n*6,l,u,d,m);let B=Math.floor(this.displayProgress*100);this.displayProgress>=.92&&(B=100),a.loadingPercentage.setText(e,`${B}%`),$(e,0,0,o,a.loadingPercentage,n*6,D,X+100*n,n)}this.displayProgress>=.97&&!this.sceneChanged&&(this.sceneChanged=!0,setTimeout(async()=>{await r.changeScene(qe)},0))}clamp(t,e,o){return Math.min(Math.max(t,e),o)}destroy(){const t=r.state;t.loadingBarOutline.destroy(),t.loadingBar.destroy(),t.thumbnail.destroy(),delete t.loadingBarOutline,delete t.loadingBar,delete t.thumbnail}};U(Q,"textureAtlas"),U(Q,"paletteTexture"),U(Q,"shader");let x=Q;async function Zs(h){r.gl=h,await r.changeScene(x)}const Wt=L.getContext("webgl",{alpha:!0});Wt.enable(Wt.BLEND);Wt.blendFunc(Wt.SRC_ALPHA,Wt.ONE_MINUS_SRC_ALPHA);Wt.enable(Wt.DEPTH_TEST);Zs(Wt);
